version=pmwiki-2.2.0 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.13) Gecko/2009073022 Firefox/3.0.13 (.NET CLR 3.5.30729)
author=
charset=ISO-8859-1
csum=
host=129.132.128.136
name=Main.Roadmap
rev=30
targets=
text=!Roadmap/To-do%0a%0a*Atom and bond labels: available in graphics engine but not exposed yet due to font rendering issue on different platform%0a*Re-enable hiding of hydrogens%0a*(Mac OS) Move workspace tree and molecule properties widget into drawer%0a*New rendering engine supporting multi-pass rendering and FBOs, the plan is to get rid of OpenInventor and OpenMOIV dependencies. First version of new engine based on VTK and OpenSceneGraph is being developed and will be available in a future version of the program.%0a*Persistent settings: only a few settings are persistent across sessions; support for application-wide loadable preferences should be added.%0a*Support for new quantum chemistry formats: Q5COST(?) and PCLOBE.%0a*Support for ambient occlusion. Already implemented as a separate stand-alone application for both atoms and surfaces; will move the code inside Molekel after new rendering engine is available.  %0a*Unify vibration/trajectory animation. The way vibration and trajectory animations are currently generated is completely different: vibrational modes are animated analytically (i.e. Position(x, y, z) = F(time) ) while trajectories are a simple sequence of frames; this can be solved by generating a frame sequence from vibrational modes and then repeat the animation indefinitely. This will also allow to jump to individual frames and greatly simplify the animation code and GUI(no need for ''Vibration'' & ''Trajectory'' selector.%0a*Support arrows for trajectories.%0a*Add GUI for changing arrows color and level of detail.%0a*Rotate by keyboard, not only by mouse%0a*Add/remove atoms%0a*Move atom/group: allow user to select and move an atom (or group of atoms) and and have bonds automatically recomputed while atom is moving%0a*Computation of approximated volume enclosed by surfaces%0a*Change per-molecule MEP scale%0a*Volume rendering: implement volume rendering for grid data; already implemented as a separate prototype; main issue is to provided a GUI to modify/load/save transfer functions and color-maps.
time=1250603679
author:1250603679=
diff:1250603679:1238420558:=3,4c3%0a%3c *Atom and bond labels: available in graphics engine but not exposed yet due to font rendering issue on different platform%0a%3c *Re-enable hiding of hydrogens%0a---%0a> *Re-enable multithreading (requires a lot of testing on multiple platforms) and make all operations interruptible. The first modules that will support multi-threading are file loading and orbital grid data generation %0a9a9%0a> *Add molecule display style control (liquorice/spacefill/ball & stick/wireframe) into main toolbar.%0a11a12%0a> *Show trajectory step #.%0a13a15%0a> *Add/remove bonds - already implemented in trunk as of 03/23/2009%0a17a20%0a> *Support for saving images with resolution higher than screen resolution (through off-screen rendering)%0a
host:1250603679=129.132.128.136
author:1238420558=
diff:1238420558:1236950357:=2a3%0a> *Hide hydrogen atoms%0a15c16%0a%3c *Add/remove bonds - already implemented in trunk as of 03/23/2009%0a---%0a> *Add/remove bonds%0a
host:1238420558=148.187.130.153
author:1236950357=
diff:1236950357:1236950325:=6c6%0a%3c *New rendering engine supporting multi-pass rendering and FBOs, the plan is to get rid of OpenInventor and OpenMOIV dependencies. First version of new engine based on VTK and OpenSceneGraph is being developed and will be available in a future version of the program.%0a---%0a> *New rendering engine supporting multi-pass rendering and FBOs, the plan is to get rid of OpenInventor and OpenMOIV dependencies. First version of new engine based on VTK and OpenSceneGraph is being developed and will be available in Molekel 5.4.%0a
host:1236950357=148.187.130.153
author:1236950325=
diff:1236950325:1220859603:=2a3%0a> *Move to Qt 4.4 and VTK 5.2; issue: ''Qwt'' doesn't seem to work properly with Qt 4.4  %0a8c9%0a%3c *Support for new quantum chemistry formats: Q5COST(?) and PCLOBE.%0a---%0a> *Support for new quantum chemistry formats: Q5COST and PCLOBE.%0a13d13%0a%3c *Show trajectory step #.%0a14a15%0a> *Molden reader enhancements (frequency info is currently not read).%0a
host:1236950325=148.187.130.153
author:1220859603=
diff:1220859603:1220859264:=22d21%0a%3c *Support for saving images with resolution higher than screen resolution (through off-screen rendering)%0a
host:1220859603=148.187.130.153
author:1220859264=
diff:1220859264:1220859184:=3c3%0a%3c *Move to Qt 4.4 and VTK 5.2; issue: ''Qwt'' doesn't seem to work properly with Qt 4.4  %0a---%0a> *Move to Qt 4.3 or 4.4 and VTK 5.2%0a
host:1220859264=148.187.130.153
author:1220859184=
diff:1220859184:1220859029:=21,22c21%0a%3c *Change per-molecule MEP scale%0a%3c *Volume rendering: implement volume rendering for grid data; already implemented as a separate prototype; main issue is to provided a GUI to modify/load/save transfer functions and color-maps. %0a\ No newline at end of file%0a---%0a> *Change per-molecule MEP scale%0a\ No newline at end of file%0a
host:1220859184=148.187.130.153
author:1220859029=
diff:1220859029:1216389912:=13c13%0a%3c *Support arrows for trajectories.%0a---%0a> *Support arrows for trajectories."%0a
host:1220859029=148.187.130.153
author:1216389912=
diff:1216389912:1206949957:=4d3%0a%3c *Hide hydrogen atoms%0a
host:1216389912=129.132.128.136
author:1206949957=
diff:1206949957:1203690500:=1,2c1,2%0a%3c !Roadmap/To-do%0a%3c %0a---%0a> !Roadmap%0a> %0a18,20c18%0a%3c *Move atom/group: allow user to select and move an atom (or group of atoms) and and have bonds automatically recomputed while atom is moving%0a%3c *Computation of approximated volume enclosed by surfaces%0a%3c *Change per-molecule MEP scale%0a\ No newline at end of file%0a---%0a> *Move atom/group: allow user to select and move an atom (or group of atoms) and and have bonds automatically recomputed while atom is mooving%0a\ No newline at end of file%0a
host:1206949957=148.187.130.131
author:1203690500=
diff:1203690500:1203690464:=17c17%0a%3c *Add/remove atoms%0a---%0a> *Add/remove atoms (?)%0a
host:1203690500=148.187.130.181
author:1203690464=
diff:1203690464:1203690371:=11c11%0a%3c *Unify vibration/trajectory animation. The way vibration and trajectory animations are currently generated is completely different: vibrational modes are animated analytically (i.e. Position(x, y, z) = F(time) ) while trajectories are a simple sequence of frames; this can be solved by generating a frame sequence from vibrational modes and then repeat the animation indefinitely. This will also allow to jump to individual frames and greatly simplify the animation code and GUI(no need for ''Vibration'' & ''Trajectory'' selector.%0a---%0a> *Unify vibration/trajectory animation. The way vibration and trajectory animations are currently generated is completely different: vibrational modes are animated analytically (i.e. Position(x, y, z) = F(time) ) while trajectories are a simple sequence of frames; this can be solved by generating a frame sequence from vibrational modes and then repeat the animation indefinitely. This will also allow to jump to individual frames and greatly simplify the animation code.%0a
host:1203690464=148.187.130.181
author:1203690371=
diff:1203690371:1203524811:=17,18c17%0a%3c *Add/remove atoms (?)%0a%3c *Move atom/group: allow user to select and move an atom (or group of atoms) and and have bonds automatically recomputed while atom is mooving  %0a\ No newline at end of file%0a---%0a> *Add/remove atoms (?)%0a\ No newline at end of file%0a
host:1203690371=148.187.130.181
author:1203524811=
diff:1203524811:1203524787:=3c3%0a%3c *Move to Qt 4.3 or 4.4 and VTK 5.2%0a---%0a> *Move to Qt 4.3 and new version of VTK%0a
host:1203524811=148.187.130.131
author:1203524787=
diff:1203524787:1202999565:=14,17c14%0a%3c *Molden reader enhancements (frequency info is currently not read).%0a%3c *Rotate by keyboard, not only by mouse%0a%3c *Add/remove bonds%0a%3c *Add/remove atoms (?)%0a\ No newline at end of file%0a---%0a> *Molden reader enhancements (frequency info is currently not read).%0a\ No newline at end of file%0a
host:1203524787=148.187.130.131
author:1202999565=
diff:1202999565:1202921760:=8c8%0a%3c *Support for new quantum chemistry formats: Q5COST and PCLOBE.%0a---%0a> *Support for new quantum chemistry formats: Q5Cost and PCLOBE.%0a13,14c13%0a%3c *Add GUI for changing arrows color and level of detail.%0a%3c *Molden reader enhancements (frequency info is currently not read).%0a\ No newline at end of file%0a---%0a> *Add GUI for changing arrows color and resolution.%0a\ No newline at end of file%0a
host:1202999565=148.187.130.131
author:1202921760=
diff:1202921760:1202921565:=11,13c11%0a%3c *Unify vibration/trajectory animation. The way vibration and trajectory animations are currently generated is completely different: vibrational modes are animated analytically (i.e. Position(x, y, z) = F(time) ) while trajectories are a simple sequence of frames; this can be solved by generating a frame sequence from vibrational modes and then repeat the animation indefinitely. This will also allow to jump to individual frames and greatly simplify the animation code.%0a%3c *Support arrows for trajectories."%0a%3c *Add GUI for changing arrows color and resolution.%0a\ No newline at end of file%0a---%0a> *Unify vibration/trajectory animation. The way vibration and trajectory animations are currently generated is completely different: vibrational modes are animate analytically (i.e. Position(x, y, z) = F(time) ) while trajectories are a simple sequence of frames; this can be solved by generating a frame sequence from vibrational modes and then repeat the animation indefinitely.%0a\ No newline at end of file%0a
host:1202921760=148.187.130.131
author:1202921565=
diff:1202921565:1181305719:=2a3,13%0a> !!!Version 5.2%0a> *Move to OpenBabel 2.1%0a> *OpenGL GLSL shaders support; available in branches/shaders branch source tree %0a> *Dialog box to set 3D view size (right now the size of the 3D view is displayed in the status bar when resizing); already implemented in svn trunk source tree%0a> *Add option to optionally compute bonds when reading molecule (currently bonds are always computed)%0a> *Depth queue fog (available through GLSL)%0a> *Option to recompute bonds at each time step when animating vibration modes (currently disabled)%0a> *Option to not-recompute bonds when animating trajectories (bonds are currently always recomputed for each animation frame)%0a> *GUI Events record/playback for testing and simple macro recording; already implemented in svn trunk source tree%0a> %0a> !!!Versions > 5.2%0a4c15,19%0a%3c *Re-enable multithreading (requires a lot of testing on multiple platforms) and make all operations interruptible. The first modules that will support multi-threading are file loading and orbital grid data generation %0a---%0a> *Re-enable multithreading (requires a lot of testing on multiple platforms)%0a> *New and faster PDB reader (currently under testing)%0a> *Frequency spectrum computed from vibration data and export of frequency graph to PostScript%0a> *Refactor code to have ''MainWindow'' depend only on ''MolekelData'' and ''MolekelMolecule''  %0a> *ECMAScript compliant scripting; will use scripting support recently added to Qt 4.3 (in a format suitable for UI testing and demos)%0a6,11c21%0a%3c *New rendering engine supporting multi-pass rendering and FBOs, the plan is to get rid of OpenInventor and OpenMOIV dependencies. First version of new engine based on VTK and OpenSceneGraph is being developed and will be available in Molekel 5.4.%0a%3c *Persistent settings: only a few settings are persistent across sessions; support for application-wide loadable preferences should be added.%0a%3c *Support for new quantum chemistry formats: Q5Cost and PCLOBE.%0a%3c *Support for ambient occlusion. Already implemented as a separate stand-alone application for both atoms and surfaces; will move the code inside Molekel after new rendering engine is available.  %0a%3c *Add molecule display style control (liquorice/spacefill/ball & stick/wireframe) into main toolbar.%0a%3c *Unify vibration/trajectory animation. The way vibration and trajectory animations are currently generated is completely different: vibrational modes are animate analytically (i.e. Position(x, y, z) = F(time) ) while trajectories are a simple sequence of frames; this can be solved by generating a frame sequence from vibrational modes and then repeat the animation indefinitely.   %0a\ No newline at end of file%0a---%0a> *New rendering engine supporting multi-pass rendering and FBOs %0a
host:1202921565=148.187.130.131
author:1181305719=
diff:1181305719:1179072866:=5,6c5,6%0a%3c *OpenGL GLSL shaders support; available in branches/shaders branch source tree %0a%3c *Dialog box to set 3D view size (right now the size of the 3D view is displayed in the status bar when resizing); already implemented in svn trunk source tree%0a---%0a> *OpenGL GLSL shaders support (already available in branches/shaders branch) %0a> *Dialog box to set 3D view size (right now the size of the 3D view is displayed in the status bar when resizing)%0a8c8%0a%3c *Depth queue fog (available through GLSL)%0a---%0a> *Depth queue fog (currently available through GLSL)%0a11,12c11%0a%3c *GUI Events record/playback for testing and simple macro recording; already implemented in svn trunk source tree%0a%3c %0a---%0a> %0a
host:1181305719=148.187.130.131
author:1179072866=
diff:1179072866:1179072664:=8c8%0a%3c *Depth queue fog (currently available through GLSL)%0a---%0a> *Depth queue fog (already available, no GUI yet)%0a20c20%0a%3c *New rendering engine supporting multi-pass rendering and FBOs %0a---%0a> *New rendering engine supporting multi-pass rendering%0a
host:1179072866=87.2.216.131
author:1179072664=
diff:1179072664:1170428017:=4d3%0a%3c *Move to OpenBabel 2.1%0a
host:1179072664=87.2.216.131
author:1170428017=Ugo Varetto
diff:1170428017:1170427888:=8,10c8,9%0a%3c *Option to recompute bonds at each time step when animating vibration modes (currently disabled)%0a%3c *Option to not-recompute bonds when animating trajectories (bonds are currently always recomputed for each animation frame)%0a%3c %0a---%0a> *Option to recompute bonds at each time step (currently disabled)%0a> %0a
host:1170428017=148.187.130.131
author:1170427888=Ugo Varetto
diff:1170427888:1166718182:=3,4c3,6%0a%3c !!!Version 5.2%0a%3c *OpenGL GLSL shaders support (already available in branches/shaders branch) %0a---%0a> Tentative roadmap, to be updated after release of Molekel 5.0%0a> %0a> Version 5.1%0a> %0a5a8%0a> *Add option to specify the scaling factor for atoms and bonds (already available no GUI yet)%0a9,11c12,15%0a%3c %0a%3c !!!Versions > 5.2%0a%3c *Move to Qt 4.3 and new version of VTK%0a---%0a> *ECMAScript compliant scripting through Trolltech's QSA (in a format suitable for UI testing and demos)%0a> *(Mac OS) Move workspace tree and molecule properties widget into drawer%0a> %0a> Version 5.2%0a12a17%0a> *Animation of molecules read from multi-molecule PDB and XYZ files%0a16,18c21,32%0a%3c *ECMAScript compliant scripting; will use scripting support recently added to Qt 4.3 (in a format suitable for UI testing and demos)%0a%3c *(Mac OS) Move workspace tree and molecule properties widget into drawer%0a%3c *New rendering engine supporting multi-pass rendering%0a---%0a> %0a> Version 6%0a> *New rendering engine (looking at OpenSceneGraph + VTK, which will continue to be used for high level interaction tasks e.g. 3D widgets):%0a> **Develop vtkOSGMapper (similar to vtkSoMapper) for VTK %3c--> OSG interaction%0a> **Develop interface to communicate between OpenBabel and OpenScengraph%0a> **Add code to render atoms, bonds and surfaces (easy)%0a> **Add code to render residues (not that easy): backbone, schematic, ribbon  %0a> *Advanced rendering features to improve rendering quality and depth perception through the use of GLSL shaders:%0a> **Phong shading%0a> **Shadows%0a> **Contours/toon rendering%0a> **Global illumination methods e.g. ambient occlusion shading%0a\ No newline at end of file%0a
host:1170427888=148.187.130.131
author:1166718182=Ugo Varetto
diff:1166718182:1166638048:=0a1,2%0a> !! %25red%25 Update in progress%0a> %0a
host:1166718182=148.187.130.131
author:1166638048=Ugo Varetto
diff:1166638048:1166637986:=22,23c22,23%0a%3c *Refactor code to have ''MainWindow'' depend only on ''MolekelData'' and ''MolekelMolecule''  %0a%3c %0a---%0a> *Refactor code to have MainWindow depend only on MolekelData and MolekelMolecule  %0a> %0a
host:1166638048=148.187.130.131
author:1166637986=Ugo Varetto
diff:1166637986:1166551002:=9,12c9%0a%3c *Dialog box to set 3D view size (right now the size of the 3D view is displayed in the status bar when resizing)%0a%3c *Add option to specify the scaling factor for atoms and bonds (already available no GUI yet)%0a%3c *Add option to optionally compute bonds when reading molecule (currently bonds are always computed)%0a%3c *Depth queue fog (already available, no GUI yet)%0a---%0a> *Depth queue fog (not added to 5.0 version since GUI was not ready)%0a16c13,14%0a%3c %0a---%0a> *Re-enabled multithreading (requires a lot of testing on multiple platforms)%0a> %0a18d15%0a%3c *Re-enable multithreading (requires a lot of testing on multiple platforms)%0a
host:1166637986=148.187.130.131
author:1166551002=Ugo Varetto
diff:1166551002:1166550982:=1,2d0%0a%3c !! %25red%25 Update in progress%0a%3c %0a
host:1166551002=148.187.130.131
author:1166550982=Ugo Varetto
diff:1166550982:1166550898:=20,21c20%0a%3c *New rendering engine (looking at OpenSceneGraph + VTK, which will continue to be used for high level interaction tasks e.g. 3D widgets):%0a%3c **Develop vtkOSGMapper (similar to vtkSoMapper) for VTK %3c--> OSG interaction%0a---%0a> *New rendering engine (looking at OpenSceneGraph + VTK, which will continue to be used for highe level interaction tasks e.g. 3D widgets):%0a
host:1166550982=148.187.130.131
author:1166550898=Ugo Varetto
diff:1166550898:1166549905:=5,28d4%0a%3c Version 5.1%0a%3c %0a%3c *Depth queue fog (not added to 5.0 version since GUI was not ready)%0a%3c *Option to recompute bonds at each time step (currently disabled)%0a%3c *ECMAScript compliant scripting through Trolltech's QSA (in a format suitable for UI testing and demos)%0a%3c *(Mac OS) Move workspace tree and molecule properties widget into drawer%0a%3c *Re-enabled multithreading (requires a lot of testing on multiple platforms)%0a%3c %0a%3c Version 5.2%0a%3c *Animation of molecules read from multi-molecule PDB and XYZ files%0a%3c *New and faster PDB reader (currently under testing)%0a%3c *Frequency spectrum computed from vibration data and export of frequency graph to PostScript%0a%3c *Refactor code to have MainWindow depend only on MolekelData and MolekelMolecule  %0a%3c %0a%3c Version 6%0a%3c *New rendering engine (looking at OpenSceneGraph + VTK, which will continue to be used for highe level interaction tasks e.g. 3D widgets):%0a%3c **Develop interface to communicate between OpenBabel and OpenScengraph%0a%3c **Add code to render atoms, bonds and surfaces (easy)%0a%3c **Add code to render residues (not that easy): backbone, schematic, ribbon  %0a%3c *Advanced rendering features to improve rendering quality and depth perception through the use of GLSL shaders:%0a%3c **Phong shading%0a%3c **Shadows%0a%3c **Contours/toon rendering%0a%3c **Global illumination methods e.g. ambient occlusion shading  %0a\ No newline at end of file%0a
host:1166550898=148.187.130.131
author:1166549905=Ugo Varetto
diff:1166549905:1166549905:=1,4d0%0a%3c !Roadmap%0a%3c %0a%3c Tentative roadmap, to be updated after release of Molekel 5.0%0a%3c %0a
host:1166549905=148.187.130.131
