version=pmwiki-2.2.0 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.19 (KHTML, like Gecko) Chrome/1.0.154.48 Safari/525.19
author=
charset=ISO-8859-1
csum=
host=148.187.130.153
name=Main.OpenBabel
rev=21
targets=
text=(:title OpenBabel and MinGW :)%0a%0a'''''NOTE''''': [-This page is left for reference; ''Molekel'' is not however using ''MinGW'' anymore as the main Windows build environment, it is therefore not required to have a ''MinGW'' build of ''OpenBabel''-]. %0a%0aOpenBabel doesn't build out of the box with MinGW, this page describes how to build OpenBabel 2.0.2 and 2.1 (libs only) on Windows with MinGW.%0aActually OpenBabel libraries do not seem to be built on Windows using the provided VC++ project files neither.%0a%0aOpenBabel requires ''libxml2'' so make sure you have this library properly installed in your MinGW environment; libxml can be found here: http://xmlsoft.org%0a%0a!!OpenBabel 2.1 (libs only)%0a%0a!!!1 - hash_map%0aWhen building OB 2.1 on MinGW you need to disable the usage of @@hash_map@@ in ''@@obmolecformat.h@@'': simply comment the lines where this class is used:%0a[@%0a/*depending on the version of gcc installed you might or might not have hash_map in the include path.*/%0a//#ifdef _WIN32%0a//  #include %3chash_map> %0a//#endif%0a%0a...%0a%0a//#ifdef _WIN32%0a  //typedef stdext::hash_map%3cstd::string, unsigned> NameIndexType;%0a//#else%0a  typedef std::map%3cstd::string, unsigned> NameIndexType;%0a//#endif%0a@] %0aNote that @@stdext::hash_map@@ is MS version of something similar to @@tr1::unordered_map@@ and GCC's @@__gnu_cxx::hash_map@@ which is in fact a modified version of SGI's @@::hash_map@@; these data types are not however compatible with each other(try to replace @@stdext::hash_map@@ with @@__gnu_cxx::hash_map@@ and check the error you get). %0a%0a!!!2 - ''@@gettimeofday()@@''%0aOpenBabel does need the @@gettimeofday()@@ function which might or might not be available in your MinGW environment; in case you install ''MinGW 5.1.3'' (gcc 3.4.2) the function should be available as%0a[@%0aint __cdecl gettimeofday(struct timeval *__restrict__,%0a			 void *__restrict__  /*	tzp (unused) */);%0a@]%0a%0aAlso note that mingw-runtime 3.12 or later should contain a proper implementation of @@gettimeofday()@@.%0a%0aIf the function is not available, you can simply replace @@include/sys/time.h@@ with an include containing the following code:%0a[@%0a#ifndef _SYS_TIME_H_%0a#define _SYS_TIME_H_%0a#include %3ctime.h>%0a%0a#include %3cwindows.h>%0a%0a%0a#ifndef _TIMEVAL_DEFINED /* also in winsock[2].h */%0a#define _TIMEVAL_DEFINED%0astruct timeval {%0a  long tv_sec;%0a  long tv_usec;%0a};%0a#define timerisset(tvp)	 ((tvp)->tv_sec || (tvp)->tv_usec)%0a#define timercmp(tvp, uvp, cmp) \%0a	(((tvp)->tv_sec != (uvp)->tv_sec) ? \%0a	((tvp)->tv_sec cmp (uvp)->tv_sec) : \%0a	((tvp)->tv_usec cmp (uvp)->tv_usec))%0a#define timerclear(tvp)	 (tvp)->tv_sec = (tvp)->tv_usec = 0%0a#endif /* _TIMEVAL_DEFINED */%0a%0a/* Provided for compatibility with code that assumes that%0a   the presence of gettimeofday function implies a definition%0a   of struct timezone. */%0astruct timezone%0a{%0a  int tz_minuteswest; /* of Greenwich */%0a  int tz_dsttime;     /* type of dst correction to apply */%0a};%0a%0a/*%0a   Implementation as per:%0a   The Open Group Base Specifications, Issue 6%0a   IEEE Std 1003.1, 2004 Edition%0a%0a   The timezone pointer arg is ignored.  Errors are ignored.%0a*/ %0a%0a#ifdef	__cplusplus%0a%0avoid  GetSystemTimeAsFileTime(FILETIME*);%0a%0ainline int gettimeofday(struct timeval* p, void* tz /* IGNORED */)%0a{%0a	union {%0a	    long long ns100; /*time since 1 Jan 1601 in 100ns units */%0a		FILETIME ft;%0a	} now;%0a%0a    GetSystemTimeAsFileTime( &(now.ft) );%0a    p->tv_usec=(long)((now.ns100 / 10LL) %25 1000000LL );%0a    p->tv_sec= (long)((now.ns100-(116444736000000000LL))/10000000LL);%0a	return 0;%0a}%0a%0a#else %0a    /* Must be defined somewhere else */%0a	int gettimeofday(struct timeval* p, void* tz /* IGNORED */);%0a#endif%0a%0a#endif /* _SYS_TIME_H_ */%0a@]%0a%0aThat's it. With these two changes you'll be able to build the ''inchi'' and ''openbabel'' libraries.%0a%0a!!OpenBabel 2.0.x%0aFollowing the instructions in this section you'll be able to build all the libraries and tools except for @@obgrep@@ which has a dependency%0aon a library which is not included in the OpenBabel distribution: @@XGetopt@@ and that you can download from here: http://www.codeproject.com/cpp/xgetopt.asp?df=100.%0a%0aIf you try to build OpenBabel 2.0.2 on Windows with MinGW you might get something similar to the following:%0a%0a[@%0a./configure%0a...%0amake%0a...%0a../../src/obutil.h:73: error: `gettimeofday' undeclared (first use this function)      %0a@]%0a%0aThe compiler is complaining about a missing function; @@gettimeofday@@ is in fact missing in some MinGW environments (mingw-runtime 3.12 or better should contain a proper implementation of @@gettimeofday@@).%0a%0aTo fix this you can do the following:%0a%0a'''''1.''''' Open @@src/babelconfig.h.in@@ and add the following declaration:%0a[@%0avoid gettimeofday( struct timeval* p, void* );%0a@]%0a%0aIf you build now you get a brand new error message:%0a[@bondtyper.cpp:21: bondtyp.h: No such file or directory@]%0a%0aThe problem is that there are a number of files in the data dir which need to be accessible and they are not because this directory is not in the include path, here is part of the gcc command line you get when invoking @@make@@: %0a[@-I. -I. -I. -I../data@]%0a%0aTo fix this problem you need to add the data dir (where the @@bondtyp.h@@ resides) to the include path.%0a%0a'''''2.''''' before running @@./configure@@ set the @@CPPFLAGS@@ evironment variable:%0a[@export CPPFLAGS="-I %3cabsolute path to data dir>"@]%0a%0aNow everything compiles but doesn't link yet because there is no definition of function @@gettimeofday@@ so in case you try to link you get the following error:%0a[@undefined reference to `gettimeofday( timeval*, void* )@]%0aWe need to write the definition of this function in a c++ file and then modify the makefile to include this new source file.%0a%0a'''''3.''''' create a file @@gettimeofday.cpp@@ and add the following code into it:%0a[@%0a   #include %3cwindows.h>%0a   #include %3csys/time.h>%0a%0a   void __stdcall GetSystemTimeAsFileTime(FILETIME*);%0a%0a   void gettimeofday(struct timeval* p, void* tz /* IGNORED */)%0a   {%0a	  union {%0a	     long long ns100; /*time since 1 Jan 1601 in 100ns units */%0a		 FILETIME ft;%0a	  } now;%0a%0a      GetSystemTimeAsFileTime( &(now.ft) );%0a      p->tv_usec=(long)((now.ns100 / 10LL) %25 1000000LL );%0a      p->tv_sec= (long)((now.ns100-(116444736000000000LL))/10000000LL);%0a   }%0a@]%0a%0a'''''4.''''' Modify @@Makefile.in@@ adding @@gettimeofday.cpp@@ to the list of source files:%0a[@ ...%0a   @BUILD_SHARED_TRUE@ fingerprints/libfingerprints.la @LTLIBOBJS@%0a   am__libopenbabel_la_SOURCES_DIST = gettimeofday.cpp atom.cpp base.cpp bitvec.cpp \%0a   ...%0a   @BUILD_SHARED_TRUE@am__objects_1 = dlhandler_unix.lo%0a   am_libopenbabel_la_OBJECTS = gettimeofday.lo base.lo bitvec.lo bond.lo \%0a   ...%0a   libopenbabel_la_SOURCES = \%0a		gettimeofday.cpp atom.cpp base.cpp bitvec.cpp bond.cpp \%0a   ...%0a@]%0a   %0aIf you build it with the current configuration you will incur in another problem: the dynamic library handler is set to unix%0a%0a'''''5.''''' substitute all the instances of @@dlhandler_unix.xxx@@ in @@Makefile.in@@ with @@dlhandler_win32.xxx@@, there should be a total of five occurrences in the file. The use of a dynamic library handler should be automatically enabled when shared library support is turned on (default).%0aIn case @@dlhandler@@ is set to @@null@@ in @@Makefile@@ you'll have to manually remove[@ @BUILD_SHARED_TRUE@ @]in front of @@am_objects_1@@ AND @@dlhandler =dlhandler_win32.cpp@@ you have to do this if you get a link error about an undefined symbol @@__imp_XXXDLHandler9openFileXXXX@@%0a%0aAt this point the libraries build but not the executables.%0a %0a'''''6.''''' if you want to build the executables you'll have to open all the cpp files in the ''test'' and ''tools'' folder and comment%0a[@ #define USING_OBDLL @]%0ai.e.%0a[@%0a// used to set import/export for Cygwin DLLs%0a#ifdef WIN32%0a//#define USING_OBDLL%0a#endif%0a@]%0a%0a'''''7.''''' run @@configure --prefix=%3cinstallation folder>@@ then @@make@@: this will build the libraries into @@src/.libs@@, and the executables in the @@src@@, tools and test folders. You can then run @@make install@@.%0aNote that to have @@make install@@ succeed you have to also fix @@obgrep.cpp@@ so that it can somehow build: either you get the [[http://www.codeproject.com/cpp/xgetopt.asp?df=100 | XGetopt]] library mentioned at the beginning of this document, build it with MinGW and link with it or you can simply comment the code in @@obgrep.cpp@@ @@main@@ function.%0a
time=1237225527
title=OpenBabel and MinGW 
author:1237225527=
diff:1237225527:1237225488:=3c3%0a%3c '''''NOTE''''': [-This page is left for reference; ''Molekel'' is not however using ''MinGW'' anymore as the main Windows build environment, it is therefore not required to have a ''MinGW'' build of ''OpenBabel''-]. %0a---%0a> '''''NOTE''''': This page is left for reference; ''Molekel'' is not however using ''MinGW'' anymore as the main Windows build environment, it is therefore not required to have a ''MinGW'' build of ''OpenBabel''. %0a
host:1237225527=148.187.130.153
author:1237225488=
diff:1237225488:1237225360:=2,3d1%0a%3c %0a%3c '''''NOTE''''': This page is left for reference; ''Molekel'' is not however using ''MinGW'' anymore as the main Windows build environment, it is therefore not required to have a ''MinGW'' build of ''OpenBabel''. %0a
host:1237225488=148.187.130.153
author:1237225360=
diff:1237225360:1183068606:=1c1%0a%3c (:title OpenBabel and MinGW :)%0a---%0a> !OpenBabel and MinGW%0a
host:1237225360=148.187.130.153
author:1183068606=
diff:1183068606:1182955658:=13d12%0a%3c /*depending on the version of gcc installed you might or might not have hash_map in the include path.*/%0a15c14,16%0a%3c //  #include %3chash_map> %0a---%0a>   //typedef stdext::hash_map%3cstd::string, unsigned> NameIndexType;%0a> //#else%0a>   typedef std::map%3cstd::string, unsigned> NameIndexType;%0a17,24d17%0a%3c %0a%3c ...%0a%3c %0a%3c //#ifdef _WIN32%0a%3c   //typedef stdext::hash_map%3cstd::string, unsigned> NameIndexType;%0a%3c //#else%0a%3c   typedef std::map%3cstd::string, unsigned> NameIndexType;%0a%3c //#endif%0a
host:1183068606=84.74.33.192
author:1182955658=
diff:1182955658:1182955606:=22c22%0a%3c OpenBabel does need the @@gettimeofday()@@ function which might or might not be available in your MinGW environment; in case you install ''MinGW 5.1.3'' (gcc 3.4.2) the function should be available as%0a---%0a> OpenBabel does need the @@gettimeofday()@@ function which might or might not be available in the MinGW installation; in case you install ''MinGW 5.1.3'' (gcc 3.4.2) the function should be available as%0a28,29c28,29%0a%3c Also note that mingw-runtime 3.12 or later should contain a proper implementation of @@gettimeofday()@@.%0a%3c %0a---%0a> Note that mingw-runtime 3.12 or later should contain a proper implementation of @@gettimeofday()@@.%0a> %0a
host:1182955658=148.187.130.131
author:1182955606=
diff:1182955606:1182955530:=22c22%0a%3c OpenBabel does need the @@gettimeofday()@@ function which might or might not be available in the MinGW installation; in case you install ''MinGW 5.1.3'' (gcc 3.4.2) the function should be available as%0a---%0a> OpenBabel does need the gettimeofdaty() function which might or might not be available in the MinGW installation; in case you install ''MinGW 5.1.3'' (gcc 3.4.2) the function should be available as%0a
host:1182955606=148.187.130.131
author:1182955530=
diff:1182955530:1182954783:=28,30c28%0a%3c Note that mingw-runtime 3.12 or later should contain a proper implementation of @@gettimeofday()@@.%0a%3c %0a%3c If the function is not available, you can simply replace @@include/sys/time.h@@ with an include containing the following code:%0a---%0a> In case the function is not available, you can simply replace @@include/sys/time.h@@ with an include containing the following code:%0a101,102c99,100%0a%3c If you try to build OpenBabel 2.0.2 on Windows with MinGW you might get something similar to the following:%0a%3c %0a---%0a> If you try to build OpenBabel 2.0.2 on Windows with MinGW you should get something similar to the following:%0a> %0a111,112c109,110%0a%3c The compiler is complaining about a missing function; @@gettimeofday@@ is in fact missing in some MinGW environments (mingw-runtime 3.12 or better should contain a proper implementation of @@gettimeofday@@).%0a%3c %0a---%0a> The compiler is complaining about a missing function; @@gettimeofday@@ is in fact missing in a MinGW environment.%0a> %0a
host:1182955530=148.187.130.131
author:1182954783=
diff:1182954783:1182954729:=3c3%0a%3c OpenBabel doesn't build out of the box with MinGW, this page describes how to build OpenBabel 2.0.2 and 2.1 (libs only) on Windows with MinGW.%0a---%0a> OpenBabel doesn't build out of the box with MinGW, this section describes how to build OpenBabel 2.0.2 and 2.1 (libs only) on Windows with MinGW.%0a
host:1182954783=148.187.130.131
author:1182954729=
diff:1182954729:1167933409:=3c3%0a%3c OpenBabel doesn't build out of the box with MinGW, this section describes how to build OpenBabel 2.0.2 and 2.1 (libs only) on Windows with MinGW.%0a---%0a> OpenBabel doesn't build out of the box with MinGW, this section describes how to build OpenBabel 2.0.2 on Windows with MinGW.%0a5a6,8%0a> Following the instructions on this page you'll be able to build all the libraries and tools except for @@obgrep@@ which has a dependency%0a> on a library which is not included in the OpenBabel distribution: @@XGetopt@@ and that you can download from here: http://www.codeproject.com/cpp/xgetopt.asp?df=100.%0a> %0a8,11c11,12%0a%3c !!OpenBabel 2.1 (libs only)%0a%3c %0a%3c !!!1 - hash_map%0a%3c When building OB 2.1 on MinGW you need to disable the usage of @@hash_map@@ in ''@@obmolecformat.h@@'': simply comment the lines where this class is used:%0a---%0a> If you try to build OpenBabel 2.0.2 on Windows with MinGW you should get something similar to the following:%0a> %0a13,25c14,18%0a%3c //#ifdef _WIN32%0a%3c   //typedef stdext::hash_map%3cstd::string, unsigned> NameIndexType;%0a%3c //#else%0a%3c   typedef std::map%3cstd::string, unsigned> NameIndexType;%0a%3c //#endif%0a%3c @] %0a%3c Note that @@stdext::hash_map@@ is MS version of something similar to @@tr1::unordered_map@@ and GCC's @@__gnu_cxx::hash_map@@ which is in fact a modified version of SGI's @@::hash_map@@; these data types are not however compatible with each other(try to replace @@stdext::hash_map@@ with @@__gnu_cxx::hash_map@@ and check the error you get). %0a%3c %0a%3c !!!2 - ''@@gettimeofday()@@''%0a%3c OpenBabel does need the gettimeofdaty() function which might or might not be available in the MinGW installation; in case you install ''MinGW 5.1.3'' (gcc 3.4.2) the function should be available as%0a%3c [@%0a%3c int __cdecl gettimeofday(struct timeval *__restrict__,%0a%3c 			 void *__restrict__  /*	tzp (unused) */);%0a---%0a> ./configure%0a> ...%0a> make%0a> ...%0a> ../../src/obutil.h:73: error: `gettimeofday' undeclared (first use this function)      %0a28c21,25%0a%3c In case the function is not available, you can simply replace @@include/sys/time.h@@ with an include containing the following code:%0a---%0a> The compiler is complaining about a missing function; @@gettimeofday@@ is in fact missing in a MinGW environment.%0a> %0a> To fix this you can do the following:%0a> %0a> '''''1.''''' Open @@src/babelconfig.h.in@@ and add the following declaration:%0a30,90c27%0a%3c #ifndef _SYS_TIME_H_%0a%3c #define _SYS_TIME_H_%0a%3c #include %3ctime.h>%0a%3c %0a%3c #include %3cwindows.h>%0a%3c %0a%3c %0a%3c #ifndef _TIMEVAL_DEFINED /* also in winsock[2].h */%0a%3c #define _TIMEVAL_DEFINED%0a%3c struct timeval {%0a%3c   long tv_sec;%0a%3c   long tv_usec;%0a%3c };%0a%3c #define timerisset(tvp)	 ((tvp)->tv_sec || (tvp)->tv_usec)%0a%3c #define timercmp(tvp, uvp, cmp) \%0a%3c 	(((tvp)->tv_sec != (uvp)->tv_sec) ? \%0a%3c 	((tvp)->tv_sec cmp (uvp)->tv_sec) : \%0a%3c 	((tvp)->tv_usec cmp (uvp)->tv_usec))%0a%3c #define timerclear(tvp)	 (tvp)->tv_sec = (tvp)->tv_usec = 0%0a%3c #endif /* _TIMEVAL_DEFINED */%0a%3c %0a%3c /* Provided for compatibility with code that assumes that%0a%3c    the presence of gettimeofday function implies a definition%0a%3c    of struct timezone. */%0a%3c struct timezone%0a%3c {%0a%3c   int tz_minuteswest; /* of Greenwich */%0a%3c   int tz_dsttime;     /* type of dst correction to apply */%0a%3c };%0a%3c %0a%3c /*%0a%3c    Implementation as per:%0a%3c    The Open Group Base Specifications, Issue 6%0a%3c    IEEE Std 1003.1, 2004 Edition%0a%3c %0a%3c    The timezone pointer arg is ignored.  Errors are ignored.%0a%3c */ %0a%3c %0a%3c #ifdef	__cplusplus%0a%3c %0a%3c void  GetSystemTimeAsFileTime(FILETIME*);%0a%3c %0a%3c inline int gettimeofday(struct timeval* p, void* tz /* IGNORED */)%0a%3c {%0a%3c 	union {%0a%3c 	    long long ns100; /*time since 1 Jan 1601 in 100ns units */%0a%3c 		FILETIME ft;%0a%3c 	} now;%0a%3c %0a%3c     GetSystemTimeAsFileTime( &(now.ft) );%0a%3c     p->tv_usec=(long)((now.ns100 / 10LL) %25 1000000LL );%0a%3c     p->tv_sec= (long)((now.ns100-(116444736000000000LL))/10000000LL);%0a%3c 	return 0;%0a%3c }%0a%3c %0a%3c #else %0a%3c     /* Must be defined somewhere else */%0a%3c 	int gettimeofday(struct timeval* p, void* tz /* IGNORED */);%0a%3c #endif%0a%3c %0a%3c #endif /* _SYS_TIME_H_ */%0a---%0a> void gettimeofday( struct timeval* p, void* );%0a93,100c30,45%0a%3c That's it. With these two changes you'll be able to build the ''inchi'' and ''openbabel'' libraries.%0a%3c %0a%3c !!OpenBabel 2.0.x%0a%3c Following the instructions in this section you'll be able to build all the libraries and tools except for @@obgrep@@ which has a dependency%0a%3c on a library which is not included in the OpenBabel distribution: @@XGetopt@@ and that you can download from here: http://www.codeproject.com/cpp/xgetopt.asp?df=100.%0a%3c %0a%3c If you try to build OpenBabel 2.0.2 on Windows with MinGW you should get something similar to the following:%0a%3c %0a---%0a> If you build now you get a brand new error message:%0a> [@bondtyper.cpp:21: bondtyp.h: No such file or directory@]%0a> %0a> The problem is that there are a number of files in the data dir which need to be accessible and they are not because this directory is not in the include path, here is part of the gcc command line you get when invoking @@make@@: %0a> [@-I. -I. -I. -I../data@]%0a> %0a> To fix this problem you need to add the data dir (where the @@bondtyp.h@@ resides) to the include path.%0a> %0a> '''''2.''''' before running @@./configure@@ set the @@CPPFLAGS@@ evironment variable:%0a> [@export CPPFLAGS="-I %3cabsolute path to data dir>"@]%0a> %0a> Now everything compiles but doesn't link yet because there is no definition of function @@gettimeofday@@ so in case you try to link you get the following error:%0a> [@undefined reference to `gettimeofday( timeval*, void* )@]%0a> We need to write the definition of this function in a c++ file and then modify the makefile to include this new source file.%0a> %0a> '''''3.''''' create a file @@gettimeofday.cpp@@ and add the following code into it:%0a102,106c47,62%0a%3c ./configure%0a%3c ...%0a%3c make%0a%3c ...%0a%3c ../../src/obutil.h:73: error: `gettimeofday' undeclared (first use this function)      %0a---%0a>    #include %3cwindows.h>%0a>    #include %3csys/time.h>%0a> %0a>    void __stdcall GetSystemTimeAsFileTime(FILETIME*);%0a> %0a>    void gettimeofday(struct timeval* p, void* tz /* IGNORED */)%0a>    {%0a> 	  union {%0a> 	     long long ns100; /*time since 1 Jan 1601 in 100ns units */%0a> 		 FILETIME ft;%0a> 	  } now;%0a> %0a>       GetSystemTimeAsFileTime( &(now.ft) );%0a>       p->tv_usec=(long)((now.ns100 / 10LL) %25 1000000LL );%0a>       p->tv_sec= (long)((now.ns100-(116444736000000000LL))/10000000LL);%0a>    }%0a109,115c65,75%0a%3c The compiler is complaining about a missing function; @@gettimeofday@@ is in fact missing in a MinGW environment.%0a%3c %0a%3c To fix this you can do the following:%0a%3c %0a%3c '''''1.''''' Open @@src/babelconfig.h.in@@ and add the following declaration:%0a%3c [@%0a%3c void gettimeofday( struct timeval* p, void* );%0a---%0a> '''''4.''''' Modify @@Makefile.in@@ adding @@gettimeofday.cpp@@ to the list of source files:%0a> [@ ...%0a>    @BUILD_SHARED_TRUE@ fingerprints/libfingerprints.la @LTLIBOBJS@%0a>    am__libopenbabel_la_SOURCES_DIST = gettimeofday.cpp atom.cpp base.cpp bitvec.cpp \%0a>    ...%0a>    @BUILD_SHARED_TRUE@am__objects_1 = dlhandler_unix.lo%0a>    am_libopenbabel_la_OBJECTS = gettimeofday.lo base.lo bitvec.lo bond.lo \%0a>    ...%0a>    libopenbabel_la_SOURCES = \%0a> 		gettimeofday.cpp atom.cpp base.cpp bitvec.cpp bond.cpp \%0a>    ...%0a117,133c77,87%0a%3c %0a%3c If you build now you get a brand new error message:%0a%3c [@bondtyper.cpp:21: bondtyp.h: No such file or directory@]%0a%3c %0a%3c The problem is that there are a number of files in the data dir which need to be accessible and they are not because this directory is not in the include path, here is part of the gcc command line you get when invoking @@make@@: %0a%3c [@-I. -I. -I. -I../data@]%0a%3c %0a%3c To fix this problem you need to add the data dir (where the @@bondtyp.h@@ resides) to the include path.%0a%3c %0a%3c '''''2.''''' before running @@./configure@@ set the @@CPPFLAGS@@ evironment variable:%0a%3c [@export CPPFLAGS="-I %3cabsolute path to data dir>"@]%0a%3c %0a%3c Now everything compiles but doesn't link yet because there is no definition of function @@gettimeofday@@ so in case you try to link you get the following error:%0a%3c [@undefined reference to `gettimeofday( timeval*, void* )@]%0a%3c We need to write the definition of this function in a c++ file and then modify the makefile to include this new source file.%0a%3c %0a%3c '''''3.''''' create a file @@gettimeofday.cpp@@ and add the following code into it:%0a---%0a>    %0a> If you build it with the current configuration you will incur in another problem: the dynamic library handler is set to unix%0a> %0a> '''''5.''''' substitute all the instances of @@dlhandler_unix.xxx@@ in @@Makefile.in@@ with @@dlhandler_win32.xxx@@, there should be a total of five occurrences in the file. The use of a dynamic library handler should be automatically enabled when shared library support is turned on (default).%0a> In case @@dlhandler@@ is set to @@null@@ in @@Makefile@@ you'll have to manually remove[@ @BUILD_SHARED_TRUE@ @]in front of @@am_objects_1@@ AND @@dlhandler =dlhandler_win32.cpp@@ you have to do this if you get a link error about an undefined symbol @@__imp_XXXDLHandler9openFileXXXX@@%0a> %0a> At this point the libraries build but not the executables.%0a>  %0a> '''''6.''''' if you want to build the executables you'll have to open all the cpp files in the ''test'' and ''tools'' folder and comment%0a> [@ #define USING_OBDLL @]%0a> i.e.%0a135,150c89,92%0a%3c    #include %3cwindows.h>%0a%3c    #include %3csys/time.h>%0a%3c %0a%3c    void __stdcall GetSystemTimeAsFileTime(FILETIME*);%0a%3c %0a%3c    void gettimeofday(struct timeval* p, void* tz /* IGNORED */)%0a%3c    {%0a%3c 	  union {%0a%3c 	     long long ns100; /*time since 1 Jan 1601 in 100ns units */%0a%3c 		 FILETIME ft;%0a%3c 	  } now;%0a%3c %0a%3c       GetSystemTimeAsFileTime( &(now.ft) );%0a%3c       p->tv_usec=(long)((now.ns100 / 10LL) %25 1000000LL );%0a%3c       p->tv_sec= (long)((now.ns100-(116444736000000000LL))/10000000LL);%0a%3c    }%0a---%0a> // used to set import/export for Cygwin DLLs%0a> #ifdef WIN32%0a> //#define USING_OBDLL%0a> #endif%0a153,182d94%0a%3c '''''4.''''' Modify @@Makefile.in@@ adding @@gettimeofday.cpp@@ to the list of source files:%0a%3c [@ ...%0a%3c    @BUILD_SHARED_TRUE@ fingerprints/libfingerprints.la @LTLIBOBJS@%0a%3c    am__libopenbabel_la_SOURCES_DIST = gettimeofday.cpp atom.cpp base.cpp bitvec.cpp \%0a%3c    ...%0a%3c    @BUILD_SHARED_TRUE@am__objects_1 = dlhandler_unix.lo%0a%3c    am_libopenbabel_la_OBJECTS = gettimeofday.lo base.lo bitvec.lo bond.lo \%0a%3c    ...%0a%3c    libopenbabel_la_SOURCES = \%0a%3c 		gettimeofday.cpp atom.cpp base.cpp bitvec.cpp bond.cpp \%0a%3c    ...%0a%3c @]%0a%3c    %0a%3c If you build it with the current configuration you will incur in another problem: the dynamic library handler is set to unix%0a%3c %0a%3c '''''5.''''' substitute all the instances of @@dlhandler_unix.xxx@@ in @@Makefile.in@@ with @@dlhandler_win32.xxx@@, there should be a total of five occurrences in the file. The use of a dynamic library handler should be automatically enabled when shared library support is turned on (default).%0a%3c In case @@dlhandler@@ is set to @@null@@ in @@Makefile@@ you'll have to manually remove[@ @BUILD_SHARED_TRUE@ @]in front of @@am_objects_1@@ AND @@dlhandler =dlhandler_win32.cpp@@ you have to do this if you get a link error about an undefined symbol @@__imp_XXXDLHandler9openFileXXXX@@%0a%3c %0a%3c At this point the libraries build but not the executables.%0a%3c  %0a%3c '''''6.''''' if you want to build the executables you'll have to open all the cpp files in the ''test'' and ''tools'' folder and comment%0a%3c [@ #define USING_OBDLL @]%0a%3c i.e.%0a%3c [@%0a%3c // used to set import/export for Cygwin DLLs%0a%3c #ifdef WIN32%0a%3c //#define USING_OBDLL%0a%3c #endif%0a%3c @]%0a%3c %0a
host:1182954729=148.187.130.131
author:1167933409=Ugo Varetto
diff:1167933409:1166789872:=31,32c31,32%0a%3c [@bondtyper.cpp:21: bondtyp.h: No such file or directory@]%0a%3c %0a---%0a> @[bondtyper.cpp:21: bondtyp.h: No such file or directory@]%0a> %0a
host:1167933409=148.187.130.131
author:1166789872=Ugo Varetto
diff:1166789872:1166714641:=21,22c21,22%0a%3c The compiler is complaining about a missing function; @@gettimeofday@@ is in fact missing in a MinGW environment.%0a%3c %0a---%0a> The compiler is complaining about a missing function; gettimeofday is in fact missing in a MinGW environment.%0a> %0a
host:1166789872=148.187.130.131
author:1166714641=Ugo Varetto
diff:1166714641:1166714608:=0a1,2%0a> !! %25red%25 Update in progress%0a> %0a
host:1166714641=148.187.130.131
author:1166714608=Ugo Varetto
diff:1166714608:1166714544:=83,84c83,84%0a%3c In case @@dlhandler@@ is set to @@null@@ in @@Makefile@@ you'll have to manually remove[@ @BUILD_SHARED_TRUE@ @]in front of @@am_objects_1@@ AND @@dlhandler =dlhandler_win32.cpp@@ you have to do this if you get a link error about an undefined symbol @@__imp_XXXDLHandler9openFileXXXX@@%0a%3c %0a---%0a> @in case @@dlhandler@@ is set to @@null@@ in @@Makefile@@ you'll have to manually remove @@@@BUILD_SHARED_TRUE@@@@ in front of @@am_objects_1@@ AND @@dlhandler =dlhandler_win32.cpp@@ you have to do this if you get a link error about an undefined symbol @@__imp_XXXDLHandler9openFileXXXX@@%0a> %0a
host:1166714608=148.187.130.131
author:1166714544=Ugo Varetto
diff:1166714544:1166714409:=83,84c83,84%0a%3c @in case @@dlhandler@@ is set to @@null@@ in @@Makefile@@ you'll have to manually remove @@@@BUILD_SHARED_TRUE@@@@ in front of @@am_objects_1@@ AND @@dlhandler =dlhandler_win32.cpp@@ you have to do this if you get a link error about an undefined symbol @@__imp_XXXDLHandler9openFileXXXX@@%0a%3c %0a---%0a> @in case @@dlhandler@@ is set to @@null@@ in @@Makefile@@ you'll have to manually remove @@@BUILD_SHARED_TRUE@@@ in front of @@am_objects_1@@ AND @@dlhandler =dlhandler_win32.cpp@@ you have to do this if you get a link error about an undefined symbol @@__imp_XXXDLHandler9openFileXXXX@@%0a> %0a
host:1166714544=148.187.130.131
author:1166714409=Ugo Varetto
diff:1166714409:1166713938:=26,27c26,27%0a%3c %0a%3c '''''1.''''' Open @@src/babelconfig.h.in@@ and add the following declaration:%0a---%0a> #Open @@src/babelconfig.h.in@@%0a> #Add the following declaration:%0a31d30%0a%3c %0a34d32%0a%3c %0a37,40c35,36%0a%3c %0a%3c To fix this problem you need to add the data dir (where the @@bondtyp.h@@ resides) to the include path.%0a%3c %0a%3c '''''2.''''' before running @@./configure@@ set the @@CPPFLAGS@@ evironment variable:%0a---%0a> To fix this problem you need to add the data dir (where the @@bondtyp.h@@ resides) to the include path:%0a> # before running @@./configure@@ set the @@CPPFLAGS@@ evironment variable:%0a42d37%0a%3c %0a46,47c41%0a%3c %0a%3c '''''3.''''' create a file @@gettimeofday.cpp@@ and add the following code into it:%0a---%0a> #create a file @@gettimeofday.cpp@@ and add the following code into it:%0a66,67c60%0a%3c %0a%3c '''''4.''''' Modify @@Makefile.in@@ adding @@gettimeofday.cpp@@ to the list of source files:%0a---%0a> #Modify @@Makefile.in@@ adding @@gettimeofday.cpp@@ to the list of source files:%0a78,79c71%0a%3c @]%0a%3c    %0a---%0a> @]   %0a81,82c73%0a%3c %0a%3c '''''5.''''' substitute all the instances of @@dlhandler_unix.xxx@@ in @@Makefile.in@@ with @@dlhandler_win32.xxx@@, there should be a total of five occurrences in the file. The use of a dynamic library handler should be automatically enabled when shared library support is turned on (default).%0a---%0a> #substitute all the instances of @@dlhandler_unix.xxx@@ in @@Makefile.in@@ with @@dlhandler_win32.xxx@@, there should be a total of five occurrences in the file. The use of a dynamic library handler should be automatically enabled when shared library support is turned on (default).%0a84,85d74%0a%3c %0a%3c At this point the libraries build but not the executables.%0a87,98c76,91%0a%3c '''''6.''''' if you want to build the executables you'll have to open all the cpp files in the ''test'' and ''tools'' folder and comment%0a%3c [@ #define USING_OBDLL @]%0a%3c i.e.%0a%3c [@%0a%3c // used to set import/export for Cygwin DLLs%0a%3c #ifdef WIN32%0a%3c //#define USING_OBDLL%0a%3c #endif%0a%3c @]%0a%3c %0a%3c '''''7.''''' run @@configure --prefix=%3cinstallation folder>@@ then @@make@@: this will build the libraries into @@src/.libs@@, and the executables in the @@src@@, tools and test folders. You can then run @@make install@@.%0a%3c Note that to have @@make install@@ succeed you have to also fix @@obgrep.cpp@@ so that it can somehow build: either you get the [[http://www.codeproject.com/cpp/xgetopt.asp?df=100 | XGetopt]] library mentioned at the beginning of this document, build it with MinGW and link with it or you can simply comment the code in @@obgrep.cpp@@ @@main@@ function.%0a---%0a> 7) if you want to build the executables you'll have to open the cpp files in%0a>    test and tools folder and comment #define USING_OBDLL%0a>    %0a>    // used to set import/export for Cygwin DLLs%0a>    #ifdef WIN32%0a>    //#define USING_OBDLL%0a>    #endif%0a>       %0a>  %0a> 8) run configure --prefix=%3cinstallation folder> then make: this will build the%0a>    libraries into src/.libs, and the executables in the src, tools and test folders.%0a>    You can then run make install.%0a>    Note that to have make install succeed you have to also fix obgrep.cpp so that it%0a>    can somehow build: either you get the XGetopt library mentioned at the beginning%0a>    of this document, build it with MinGW and link with it or you can simply comment%0a>    the code in obgrep.cpp main function.%0a
host:1166714409=148.187.130.131
author:1166713938=Ugo Varetto
diff:1166713938:1166713498:=23,24c23,25%0a%3c The compiler is complaining about a missing function; gettimeofday is in fact missing in a MinGW environment.%0a%3c %0a---%0a> The compiler is complaining about a missing function; gettimeofday is in fact%0a> missing in a MinGW environment.%0a> %0a26,30c27,32%0a%3c #Open @@src/babelconfig.h.in@@%0a%3c #Add the following declaration:%0a%3c [@%0a%3c void gettimeofday( struct timeval* p, void* );%0a%3c @]%0a---%0a> %0a> 1) Open src/babelconfig.h.in%0a> 2) Add the followfing declaration:%0a> %0a>    void gettimeofday( struct timeval* p, void* );%0a> %0a32,42c34,59%0a%3c @[bondtyper.cpp:21: bondtyp.h: No such file or directory@]%0a%3c The problem is that there are a number of files in the data dir which need to be accessible and they are not because this directory is not in the include path, here is part of the gcc command line you get when invoking @@make@@: %0a%3c [@-I. -I. -I. -I../data@]%0a%3c To fix this problem you need to add the data dir (where the @@bondtyp.h@@ resides) to the include path:%0a%3c # before running @@./configure@@ set the @@CPPFLAGS@@ evironment variable:%0a%3c [@export CPPFLAGS="-I %3cabsolute path to data dir>"@]%0a%3c Now everything compiles but doesn't link yet because there is no definition of function @@gettimeofday@@ so in case you try to link you get the following error:%0a%3c [@undefined reference to `gettimeofday( timeval*, void* )@]%0a%3c We need to write the definition of this function in a c++ file and then modify the makefile to include this new source file.%0a%3c #create a file @@gettimeofday.cpp@@ and add the following code into it:%0a%3c [@%0a---%0a> %0a> bondtyper.cpp:21: bondtyp.h: No such file or director%0a> %0a> The problem is that there are a number of files in the data dir which need%0a> to be accessible and they are not because this directory is not in the include%0a> path, here is part of the gcc command line you get: %0a> %0a> -I. -I. -I. -I../data%0a> %0a> To fix this problem you need to add the data dir (where the bondtyp.h resides) %0a> to the include path:%0a> %0a> 3) before running ./configure set the CPPFLAGS evironment variable:%0a>    export CPPFLAGS="-I %3cabsolute path to data dir>"%0a> %0a> Now everything compiles but doesn't link yet because there is no definition%0a> of function gettimeofday so in case you try to link you get the following%0a> error:%0a> %0a>  undefined reference to `gettimeofday(timeval*, void* )%0a> %0a> We need to write the definition of this function in a c++ file and then%0a> modify the makefile to include this new source file.%0a> %0a> 4) create a file gettimeofday.cpp and add the following code into it:%0a>    (this is a version of some code I found on the internet a while ago)%0a59,61c76,78%0a%3c @]%0a%3c #Modify @@Makefile.in@@ adding @@gettimeofday.cpp@@ to the list of source files:%0a%3c [@ ...%0a---%0a> %0a> 5) Modify Makefile.in adding gettimeofday.cpp to the list of source files:%0a>    ...%0a71,77d87%0a%3c @]   %0a%3c If you build it with the current configuration you will incur in another problem: the dynamic library handler is set to unix%0a%3c #substitute all the instances of @@dlhandler_unix.xxx@@ in @@Makefile.in@@ with @@dlhandler_win32.xxx@@, there should be a total of five occurrences in the file. The use of a dynamic library handler should be automatically enabled when shared library support is turned on (default).%0a%3c @in case @@dlhandler@@ is set to @@null@@ in @@Makefile@@ you'll have to manually remove @@@BUILD_SHARED_TRUE@@@ in front of @@am_objects_1@@ AND @@dlhandler =dlhandler_win32.cpp@@ you have to do this if you get a link error about an undefined symbol @@__imp_XXXDLHandler9openFileXXXX@@%0a%3c  %0a%3c 7) if you want to build the executables you'll have to open the cpp files in%0a%3c    test and tools folder and comment #define USING_OBDLL%0a78a89,104%0a> If you build it with the current configuration you will incur in another%0a> problem: the dynamic library handler is set to unix%0a> %0a> 6a) substitute all the instances of dlhandler_unix.xxx in Makefile.in with%0a>     dlhandler_win32.xxx, there should be a total of five occurrences in the file.%0a>     The use of a dynamic library handler should be automatically enabled when%0a>     shared library support is turned on (default).%0a>    %0a> 6b) in case dlhandler is set to null in Makefile you'll have to manually remove%0a>     @BUILD_SHARED_TRUE@ in front of am_objects_1 AND dlhandler = dlhandler_win32.cpp%0a>     you have to do this if you get a link error about an undefined%0a>     symbol __imp_XXXDLHandler9openFileXXXX%0a>        %0a> 7) if you want to build the executables you'll have to open the cpp files in%0a>    test and tools folder and comment #define USING_OBDLL%0a>    %0a
host:1166713938=148.187.130.131
author:1166713498=Ugo Varetto
diff:1166713498:1166713249:=15,19c15,18%0a%3c [@%0a%3c ./configure%0a%3c ...%0a%3c make%0a%3c ...%0a---%0a> %25frame%25 ./configure%0a> %25frame%25  ...%0a> %25frame%25 make%0a>  ...%0a21,22c20,21%0a%3c @]%0a%3c %0a---%0a> %0a> %0a
host:1166713498=148.187.130.131
author:1166713249=Ugo Varetto
diff:1166713249:1166713148:=6,7c6,7%0a%3c Actually OpenBabel libraries do not seem to be built on Windows using the provided VC++ project files neither.%0a%3c %0a---%0a> OpenBabel libraries do not seem to be built using the provided VC++ project files neither.%0a> %0a15,17c15,16%0a%3c %25frame%25 ./configure%0a%3c %25frame%25  ...%0a%3c %25frame%25 make%0a---%0a> %25frame%25%0a> ./configure%0a18a18,19%0a> make%0a>  ...%0a20,21c21,22%0a%3c %0a%3c %0a---%0a> [[%3c%3c]]%0a> %0a
host:1166713249=148.187.130.131
author:1166713148=Ugo Varetto
diff:1166713148:1166713121:=1,2c1%0a%3c !! %25red%25 Update in progress%0a%3c %0a---%0a> %0a
host:1166713148=148.187.130.131
author:1166713121=Ugo Varetto
diff:1166713121:1166713039:=1d0%0a%3c %0a12,14c11,13%0a%3c If you try to build OpenBabel 2.0.2 on Windows with MinGW you should get something similar to the following:%0a%3c %0a%3c %25frame%25%0a---%0a> If you try to build OpenBabel 2.0.2 on Windows with MinGW you should%0a> get something similar to the following:%0a> %0a20,21c19%0a%3c [[%3c%3c]]%0a%3c %0a---%0a> %0a
host:1166713121=148.187.130.131
author:1166713039=Ugo Varetto
diff:1166713039:1166713039:=1,114d0%0a%3c !OpenBabel and MinGW%0a%3c %0a%3c OpenBabel doesn't build out of the box with MinGW, this section describes how to build OpenBabel 2.0.2 on Windows with MinGW.%0a%3c OpenBabel libraries do not seem to be built using the provided VC++ project files neither.%0a%3c %0a%3c Following the instructions on this page you'll be able to build all the libraries and tools except for @@obgrep@@ which has a dependency%0a%3c on a library which is not included in the OpenBabel distribution: @@XGetopt@@ and that you can download from here: http://www.codeproject.com/cpp/xgetopt.asp?df=100.%0a%3c %0a%3c OpenBabel requires ''libxml2'' so make sure you have this library properly installed in your MinGW environment; libxml can be found here: http://xmlsoft.org%0a%3c %0a%3c If you try to build OpenBabel 2.0.2 on Windows with MinGW you should%0a%3c get something similar to the following:%0a%3c %0a%3c ./configure%0a%3c  ...%0a%3c make%0a%3c  ...%0a%3c ../../src/obutil.h:73: error: `gettimeofday' undeclared (first use this function)      %0a%3c %0a%3c The compiler is complaining about a missing function; gettimeofday is in fact%0a%3c missing in a MinGW environment.%0a%3c %0a%3c To fix this you can do the following:%0a%3c %0a%3c 1) Open src/babelconfig.h.in%0a%3c 2) Add the followfing declaration:%0a%3c %0a%3c    void gettimeofday( struct timeval* p, void* );%0a%3c %0a%3c If you build now you get a brand new error message:%0a%3c %0a%3c bondtyper.cpp:21: bondtyp.h: No such file or director%0a%3c %0a%3c The problem is that there are a number of files in the data dir which need%0a%3c to be accessible and they are not because this directory is not in the include%0a%3c path, here is part of the gcc command line you get: %0a%3c %0a%3c -I. -I. -I. -I../data%0a%3c %0a%3c To fix this problem you need to add the data dir (where the bondtyp.h resides) %0a%3c to the include path:%0a%3c %0a%3c 3) before running ./configure set the CPPFLAGS evironment variable:%0a%3c    export CPPFLAGS="-I %3cabsolute path to data dir>"%0a%3c %0a%3c Now everything compiles but doesn't link yet because there is no definition%0a%3c of function gettimeofday so in case you try to link you get the following%0a%3c error:%0a%3c %0a%3c  undefined reference to `gettimeofday(timeval*, void* )%0a%3c %0a%3c We need to write the definition of this function in a c++ file and then%0a%3c modify the makefile to include this new source file.%0a%3c %0a%3c 4) create a file gettimeofday.cpp and add the following code into it:%0a%3c    (this is a version of some code I found on the internet a while ago)%0a%3c    #include %3cwindows.h>%0a%3c    #include %3csys/time.h>%0a%3c %0a%3c    void __stdcall GetSystemTimeAsFileTime(FILETIME*);%0a%3c %0a%3c    void gettimeofday(struct timeval* p, void* tz /* IGNORED */)%0a%3c    {%0a%3c 	  union {%0a%3c 	     long long ns100; /*time since 1 Jan 1601 in 100ns units */%0a%3c 		 FILETIME ft;%0a%3c 	  } now;%0a%3c %0a%3c       GetSystemTimeAsFileTime( &(now.ft) );%0a%3c       p->tv_usec=(long)((now.ns100 / 10LL) %25 1000000LL );%0a%3c       p->tv_sec= (long)((now.ns100-(116444736000000000LL))/10000000LL);%0a%3c    }%0a%3c %0a%3c 5) Modify Makefile.in adding gettimeofday.cpp to the list of source files:%0a%3c    ...%0a%3c    @BUILD_SHARED_TRUE@ fingerprints/libfingerprints.la @LTLIBOBJS@%0a%3c    am__libopenbabel_la_SOURCES_DIST = gettimeofday.cpp atom.cpp base.cpp bitvec.cpp \%0a%3c    ...%0a%3c    @BUILD_SHARED_TRUE@am__objects_1 = dlhandler_unix.lo%0a%3c    am_libopenbabel_la_OBJECTS = gettimeofday.lo base.lo bitvec.lo bond.lo \%0a%3c    ...%0a%3c    libopenbabel_la_SOURCES = \%0a%3c 		gettimeofday.cpp atom.cpp base.cpp bitvec.cpp bond.cpp \%0a%3c    ...%0a%3c    %0a%3c If you build it with the current configuration you will incur in another%0a%3c problem: the dynamic library handler is set to unix%0a%3c %0a%3c 6a) substitute all the instances of dlhandler_unix.xxx in Makefile.in with%0a%3c     dlhandler_win32.xxx, there should be a total of five occurrences in the file.%0a%3c     The use of a dynamic library handler should be automatically enabled when%0a%3c     shared library support is turned on (default).%0a%3c    %0a%3c 6b) in case dlhandler is set to null in Makefile you'll have to manually remove%0a%3c     @BUILD_SHARED_TRUE@ in front of am_objects_1 AND dlhandler = dlhandler_win32.cpp%0a%3c     you have to do this if you get a link error about an undefined%0a%3c     symbol __imp_XXXDLHandler9openFileXXXX%0a%3c        %0a%3c 7) if you want to build the executables you'll have to open the cpp files in%0a%3c    test and tools folder and comment #define USING_OBDLL%0a%3c    %0a%3c    // used to set import/export for Cygwin DLLs%0a%3c    #ifdef WIN32%0a%3c    //#define USING_OBDLL%0a%3c    #endif%0a%3c       %0a%3c  %0a%3c 8) run configure --prefix=%3cinstallation folder> then make: this will build the%0a%3c    libraries into src/.libs, and the executables in the src, tools and test folders.%0a%3c    You can then run make install.%0a%3c    Note that to have make install succeed you have to also fix obgrep.cpp so that it%0a%3c    can somehow build: either you get the XGetopt library mentioned at the beginning%0a%3c    of this document, build it with MinGW and link with it or you can simply comment%0a%3c    the code in obgrep.cpp main function.%0a
host:1166713039=148.187.130.131
