version=pmwiki-2.2.0 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/532.0 (KHTML, like Gecko) Chrome/3.0.195.38 Safari/532.0
author=
charset=ISO-8859-1
csum=
host=85.5.142.244
name=ReferenceGuide.Introduction
rev=23
targets=
text=(:title Introduction:)%0a%0aMolekel is a free and open-source multiplatform molecular visualization program.%0a%0aThe program is developed and tested on the following platforms:%0a*SuSE Linux 10.3, Fedora Core 8 x86 32bit%0a*Red Hat Enterprise 4 x86 64bit%0a*Microsoft Windows XP/2000%0a*Apple Mac OS X 10.4 Intel and PowerPC G5%0a%0a!!!Features%0aSome of the features implemented in version 5.4 are: %0a%0a*Read molecular data from different file formats%0a*Display molecules with different styles:%0a**Spacefill%0a**Ball and Stick%0a**Ball and Wire%0a**Stick%0a**Backbone (Residues)%0a**Ribbon (Residues)%0a**Schematic (Residue)%0a*Change atom and bond size%0a*Read atom colors from file %0a*Display dipole moment (for molecular formats containing this information)%0a*Animate atoms using the trajectory and vibration information available in some file formats%0a*Animate molecules read from multi-frame pdb and xyz files%0a*Display arrows to show the speed and direction of motion of each animated atom%0a*Animate molecular surfaces (while exporting amimation)%0a*Perform distance and (dihedral) angle computations%0a*Use a planar probe to visualize scalar fields (e.g. Electrostatic Potential) and display the value of the scalar field at a specific point in 3D space.%0a*Visualize molecular orbital iso-surfaces optionally color-coded with Electrostatic Potential.%0a*Visualize surfaces generated from density matrix optionally color-coded with Electrostatic Potential.%0a*Visualize surfaces from grid data (in Gaussian cube format or read from ADF tape41 files) optionally color-coded with Electrostatic Potential.%0a*Smooth surfaces generated from grid data (Gaussian .cube) with Laplacian smoothing%0a*Use grid data read from .cube files as molecular electrostatic potential to map onto SAS and SES surfaces %0a*Compute Solvent Accessible Surface as iso-surface optionally color-coded with Electrostatic Potential.%0a*Compute and display Solvent Excluded Surface, optionally using ''M.F. Sanner'''s MSMS program (highly recommended), get it [[http://mgltools.scripps.edu/downloads | here]]%0a*Save print quality (>300 DPI) images%0a*Export molecule to a number of molecular file formats%0a*Export to POV (Experimental, through OpenBabel)%0a*Export to TIFF, PNG, PostScript and PDF%0a*Programmable shaders (GLSL) support%0a*Visualization of radiation spectra (infra-red and Raman)%0a*High-quality multi-pass rendering with anti-aliasing and correct rendering of multi-layered transparent surfaces%0a*Blending of vibrational modes%0a*Export high resolution images %0a%0a
time=1262777785
title=Introduction
author:1262777785=
diff:1262777785:1251790411:=3c3%0a%3c Molekel is a free and open-source multiplatform molecular visualization program.%0a---%0a> Molekel is a free and open-source multiplatform molecular visualization program being developed by the Visualization Group at the [[http://www.cscs.ch | Swiss National Supercomputing Centre (CSCS)]].%0a
host:1262777785=85.5.142.244
author:1251790411=
diff:1251790411:1250585670:=3,4c3,6%0a%3c Molekel is a free and open-source multiplatform molecular visualization program being developed by the Visualization Group at the [[http://www.cscs.ch | Swiss National Supercomputing Centre (CSCS)]].%0a%3c %0a---%0a> Molekel is a free opensource multiplatform molecular visualization program being developed by the Visualization Group at the [[http://www.cscs.ch | Swiss National Supercomputing Centre (CSCS)]].%0a> %0a> Version 5 is a complete rewrite of Molekel 4.x reusing some of the concepts and toolkits used for the development of Molekel 4.6; the only part that has not been rewritten from scratch  (just some bug fixing and minor changes) is the code to read Gaussian, GAMESS and Molden formats as well as the code to compute molecular orbitals. %0a> %0a12,13c14,15%0a%3c Some of the features implemented in version 5.4 are: %0a%3c %0a---%0a> Some of the features currently implemented in version 5.3 are: %0a> %0a46,47c48%0a%3c *Blending of vibrational modes%0a%3c *Export high resolution images %0a---%0a> *Blending of vibrational modes %0a
host:1251790411=148.187.130.153
author:1250585670=
diff:1250585670:1236765238:=41d40%0a%3c *Save print quality (>300 DPI) images%0a
host:1250585670=129.132.128.136
author:1236765238=
diff:1236765238:1236705593:=7a8%0a> %0a
host:1236765238=148.187.130.153
author:1236705593=
diff:1236705593:1236674174:=18c18%0a%3c *Display molecules with different styles:%0a---%0a> *Display molecules in different formats:%0a
host:1236705593=148.187.130.153
author:1236674174=
diff:1236674174:1202915288:=1c1%0a%3c (:title Introduction:)%0a---%0a> !Introduction%0a
host:1236674174=148.187.130.153
author:1202915288=
diff:1202915288:1202909776:=9,10c9%0a%3c *SuSE Linux 10.3, Fedora Core 8 x86 32bit%0a%3c *Red Hat Enterprise 4 x86 64bit%0a---%0a> *x86 SuSE Linux 10.3, Fedora Core 8%0a
host:1202915288=148.187.130.131
author:1202909776=
diff:1202909776:1202909707:=9c9%0a%3c *x86 SuSE Linux 10.3, Fedora Core 8%0a---%0a> *x86 SuSE Linux 10.x, Fedora Core 5%0a14,15c14,15%0a%3c Some of the features currently implemented in version 5.3 are: %0a%3c %0a---%0a> Some of the features currently implemented in version 5.2 are: %0a> %0a47,48c47,48%0a%3c *Blending of vibrational modes %0a%3c %0a---%0a>  %0a> %0a
host:1202909776=148.187.130.131
author:1202909707=
diff:1202909707:1184851131:=44,46c44,56%0a%3c *Programmable shaders (GLSL) support%0a%3c *Visualization of radiation spectra (infra-red and Raman)%0a%3c *High-quality multi-pass rendering with anti-aliasing and correct rendering of multi-layered transparent surfaces%0a---%0a> *Programmable shaders (GLSL) support %0a> %0a> !!!Future versions%0a> %0a> Version > 5.2 will add the following:%0a> %0a> *[[http://www.ecma-international.org/publications/standards/Ecma-262.htm | ECMAScript]] compliant scripting through Trolltech's QSA (in a format suitable for UI testing and demos) %0a> *New and faster PDB reader (currently under testing) %0a> *Frequency spectrum computed from vibration data and export of frequency spectrum graph to PostScript %0a> %0a> Version 6 will have a redesigned rendering engine with support for multi-pass rendering which is required to support some advanced rendering algorithm like ambient occlusion shading.%0a> %0a> Detailed information on future versions of Molekel can be found in the [[Main.Roadmap | roadmap]] section.%0a
host:1202909707=148.187.130.131
author:1184851131=
diff:1184851131:1181313875:=14,15c14,15%0a%3c Some of the features currently implemented in version 5.2 are: %0a%3c %0a---%0a> Some of the features currently implemented in version 5.1 are: %0a> %0a43,45c43,44%0a%3c *Export to TIFF, PNG, PostScript and PDF%0a%3c *Programmable shaders (GLSL) support %0a%3c %0a---%0a> *Export to TIFF, PostScript and PDF%0a> %0a48,49c47,49%0a%3c Version > 5.2 will add the following:%0a%3c %0a---%0a> Version > 5.1 will add the following:%0a> %0a> *Support for OpenGL shaders (already available in the branches/shaders SVN branch)%0a
host:1184851131=148.187.130.131
author:1181313875=
diff:1181313875:1170405635:=36c36%0a%3c *Visualize surfaces from grid data (in Gaussian cube format or read from ADF tape41 files) optionally color-coded with Electrostatic Potential.%0a---%0a> *Visualize surfaces from grid data (in Gaussian cube format) optionally color-coded with Electrostatic Potential.%0a
host:1181313875=148.187.130.131
author:1170405635=Ugo Varetto
diff:1170405635:1166691560:=14,15c14,15%0a%3c Some of the features currently implemented in version 5.1 are: %0a%3c %0a---%0a> Some of the features currently implemented in version 5.0 are: %0a> %0a24,26c24%0a%3c **Schematic (Residue)%0a%3c *Change atom and bond size%0a%3c *Read atom colors from file %0a---%0a> **Schematic (Residue) %0a29d26%0a%3c *Animate molecules read from multi-frame pdb and xyz files%0a37,38d33%0a%3c *Smooth surfaces generated from grid data (Gaussian .cube) with Laplacian smoothing%0a%3c *Use grid data read from .cube files as molecular electrostatic potential to map onto SAS and SES surfaces %0a44c39,40%0a%3c %0a---%0a> *Export animations with optional animation of visible surfaces  %0a> %0a47,49c43,44%0a%3c Version > 5.1 will add the following:%0a%3c %0a%3c *Support for OpenGL shaders (already available in the branches/shaders SVN branch)%0a---%0a> Version 5.1 and 5.2 will add the following:%0a> %0a50a46%0a> *Animation of molecules read from multi-molecule PDB and XYZ files%0a54,55c50,51%0a%3c Version 6 will have a redesigned rendering engine with support for multi-pass rendering which is required to support some advanced rendering algorithm like ambient occlusion shading.%0a%3c %0a---%0a> Version 6 will have a new molecule rendering engine with some advanced features to improve rendering quality and depth perception through the use of GLSL shaders. %0a> %0a
host:1170405635=148.187.130.131
author:1166691560=Ugo Varetto
diff:1166691560:1166691533:=0a1,2%0a> !! %25red%25 Update in progress%0a> %0a
host:1166691560=148.187.130.131
author:1166691533=Ugo Varetto
diff:1166691533:1166691468:=7,8c7,8%0a%3c Version 5 is a complete rewrite of Molekel 4.x reusing some of the concepts and toolkits used for the development of Molekel 4.6; the only part that has not been rewritten from scratch  (just some bug fixing and minor changes) is the code to read Gaussian, GAMESS and Molden formats as well as the code to compute molecular orbitals. %0a%3c %0a---%0a> Version 5 is a complete rewrite of Molekel 4.x reusing some of the concepts and toolkits used for Molekel 4.6; the only part that has not been rewritten from scratch  (just some bug fixing and minor changes) is the code to read Gaussian, GAMESS and Molden formats as well as the code to compute molecular orbitals. %0a> %0a
host:1166691533=148.187.130.131
author:1166691468=Ugo Varetto
diff:1166691468:1166655805:=5,6c5,8%0a%3c Molekel is a free opensource multiplatform molecular visualization program being developed by the Visualization Group at the [[http://www.cscs.ch | Swiss National Supercomputing Centre (CSCS)]].%0a%3c %0a---%0a> Molekel is a multiplatform molecular visualization program being developed at the Swiss National Supercomputing Centre (CSCS).%0a> %0a> Molekel was developed at the University of Geneva and CSCS/ETH Zurich in the early nineties, and is currently being rewritten and distributed under an open source GPL license; see the [[Main.License | license]] section for details on license and copyright.%0a> %0a13,14c15,16%0a%3c *Apple Mac OS X 10.4 Intel and PowerPC G5%0a%3c %0a---%0a> *Apple Mac OS X 10.4 Intel Core 2 and PowerPC G5%0a> %0a29c31%0a%3c *Display arrows to show the speed and direction of motion of each animated atom%0a---%0a> *Display arrows to show the direction of motion of each animated atom%0a35c37%0a%3c *Visualize surfaces from grid data (in Gaussian cube format) optionally color-coded with Electrostatic Potential.%0a---%0a> *Compute and visualize surfaces from grid data (in Gaussian cube format) optionally color-coded with Electrostatic Potential.%0a47c49%0a%3c *[[http://www.ecma-international.org/publications/standards/Ecma-262.htm | ECMAScript]] compliant scripting through Trolltech's QSA (in a format suitable for UI testing and demos) %0a---%0a> *ECMAScript compliant scripting through Trolltech's QSA (in a format suitable for UI testing and demos) %0a50,51c52,53%0a%3c *Frequency spectrum computed from vibration data and export of frequency spectrum graph to PostScript %0a%3c %0a---%0a> *Frequency spectrum computed from vibration data and export of frequency graph to PostScript %0a> %0a
host:1166691468=148.187.130.131
author:1166655805=Ugo Varetto
diff:1166655805:1166559159:=7,8c7,8%0a%3c Molekel was developed at the University of Geneva and CSCS/ETH Zurich in the early nineties, and is currently being rewritten and distributed under an open source GPL license; see the [[Main.License | license]] section for details on license and copyright.%0a%3c %0a---%0a> Molekel was developed at the University of Geneva and CSCS/ETH Zurich in the early nineties, and is currently being rewritten and distrobuted under an open source GPL license; see the [[Main.License | license]] section for details on license and copyright.%0a> %0a
host:1166655805=84.74.33.192
author:1166559159=Ugo Varetto
diff:1166559159:1166549001:=56c56%0a%3c Detailed information on future versions of Molekel can be found in the [[Main.Roadmap | roadmap]] section.%0a---%0a> Detailed information on future versions of Molekel can be found in the [[Main.RoadMap | roadmap]] section.%0a
host:1166559159=84.74.33.192
author:1166549001=Ugo Varetto
diff:1166549001:1166548922:=39c39%0a%3c *Compute and display Solvent Excluded Surface, optionally using ''M.F. Sanner'''s MSMS program (highly recommended), get it [[http://mgltools.scripps.edu/downloads | here]]%0a---%0a> *Compute and display Solvent Excluded Surface, optionally using M.F. Sanner MSMS program (highly recommended), get it [[http://mgltools.scripps.edu/downloads | here]]%0a
host:1166549001=148.187.130.131
author:1166548922=Ugo Varetto
diff:1166548922:1166548612:=36c36%0a%3c *Visualize surfaces generated from density matrix optionally color-coded with Electrostatic Potential.%0a---%0a> *Visualize surfaces generated from density matrix, optionally color-coded with Electrostatic Potential.%0a39c39%0a%3c *Compute and display Solvent Excluded Surface, optionally using M.F. Sanner MSMS program (highly recommended), get it [[http://mgltools.scripps.edu/downloads | here]]%0a---%0a> *Compute and display Solvent Excluded Surface, optionally using M.F. Sanner MSMS program (highly recommended), get it [[ |here]]%0a
host:1166548922=148.187.130.131
author:1166548612=Ugo Varetto
diff:1166548612:1166548111:=9,10c9,10%0a%3c Version 5 is a complete rewrite of Molekel 4.x reusing some of the concepts and toolkits used for Molekel 4.6; the only part that has not been rewritten from scratch  (just some bug fixing and minor changes) is the code to read Gaussian, GAMESS and Molden formats as well as the code to compute molecular orbitals. %0a%3c %0a---%0a> Version 5 is a complete rewrite of Molekel 4.x rusing some of the concepts and toolkits used for Molekel 4.6; the only part that has not been rewritten from scratch  (just some bug fixing and minor changes) is the code to read Gaussian, GAMESS and Molden formats as well as the code to compute molecular orbitals. %0a> %0a
host:1166548612=148.187.130.131
author:1166548111=Ugo Varetto
diff:1166548111:1166548036:=17d16%0a%3c !!!Features%0a45,46d43%0a%3c !!!Future versions%0a%3c %0a
host:1166548111=148.187.130.131
author:1166548036=Ugo Varetto
diff:1166548036:1166547839:=3,4d2%0a%3c !Introduction%0a%3c %0a11,16d8%0a%3c The program is developed and tested on the following platforms:%0a%3c %0a%3c *x86 SuSE Linux 10.x, Fedora Core 5%0a%3c *Microsoft Windows XP/2000%0a%3c *Apple Mac OS X 10.4 Intel Core 2 and PowerPC G5%0a%3c %0a
host:1166548036=148.187.130.131
author:1166547839=Ugo Varetto
diff:1166547839:1166547839:=1,48d0%0a%3c !! %25red%25 Update in progress%0a%3c %0a%3c Molekel is a multiplatform molecular visualization program being developed at the Swiss National Supercomputing Centre (CSCS).%0a%3c %0a%3c Molekel was developed at the University of Geneva and CSCS/ETH Zurich in the early nineties, and is currently being rewritten and distrobuted under an open source GPL license; see the [[Main.License | license]] section for details on license and copyright.%0a%3c %0a%3c Version 5 is a complete rewrite of Molekel 4.x rusing some of the concepts and toolkits used for Molekel 4.6; the only part that has not been rewritten from scratch  (just some bug fixing and minor changes) is the code to read Gaussian, GAMESS and Molden formats as well as the code to compute molecular orbitals. %0a%3c %0a%3c Some of the features currently implemented in version 5.0 are: %0a%3c %0a%3c *Read molecular data from different file formats%0a%3c *Display molecules in different formats:%0a%3c **Spacefill%0a%3c **Ball and Stick%0a%3c **Ball and Wire%0a%3c **Stick%0a%3c **Backbone (Residues)%0a%3c **Ribbon (Residues)%0a%3c **Schematic (Residue) %0a%3c *Display dipole moment (for molecular formats containing this information)%0a%3c *Animate atoms using the trajectory and vibration information available in some file formats%0a%3c *Display arrows to show the direction of motion of each animated atom%0a%3c *Animate molecular surfaces (while exporting amimation)%0a%3c *Perform distance and (dihedral) angle computations%0a%3c *Use a planar probe to visualize scalar fields (e.g. Electrostatic Potential) and display the value of the scalar field at a specific point in 3D space.%0a%3c *Visualize molecular orbital iso-surfaces optionally color-coded with Electrostatic Potential.%0a%3c *Visualize surfaces generated from density matrix, optionally color-coded with Electrostatic Potential.%0a%3c *Compute and visualize surfaces from grid data (in Gaussian cube format) optionally color-coded with Electrostatic Potential.%0a%3c *Compute Solvent Accessible Surface as iso-surface optionally color-coded with Electrostatic Potential.%0a%3c *Compute and display Solvent Excluded Surface, optionally using M.F. Sanner MSMS program (highly recommended), get it [[ |here]]%0a%3c *Export molecule to a number of molecular file formats%0a%3c *Export to POV (Experimental, through OpenBabel)%0a%3c *Export to TIFF, PostScript and PDF%0a%3c *Export animations with optional animation of visible surfaces  %0a%3c %0a%3c Version 5.1 and 5.2 will add the following:%0a%3c %0a%3c *ECMAScript compliant scripting through Trolltech's QSA (in a format suitable for UI testing and demos) %0a%3c *Animation of molecules read from multi-molecule PDB and XYZ files%0a%3c *New and faster PDB reader (currently under testing) %0a%3c *Frequency spectrum computed from vibration data and export of frequency graph to PostScript %0a%3c %0a%3c Version 6 will have a new molecule rendering engine with some advanced features to improve rendering quality and depth perception through the use of GLSL shaders. %0a%3c %0a%3c Detailed information on future versions of Molekel can be found in the [[Main.RoadMap | roadmap]] section.%0a%3c  %0a%3c %0a%3c  %0a\ No newline at end of file%0a
host:1166547839=148.187.130.131
