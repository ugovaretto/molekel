<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html dir="ltr" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
	<title>Molekel Main/Build</title>
	<link rel='stylesheet' href='../../pub/skins/molekel_glossyhue/style.css' type='text/css' />
	<link rel='stylesheet' href='../../pub/skins/molekel_glossyhue/color-turquoise/color.css' type='text/css' />
	<!--HTMLHeader--><style type='text/css'><!--.editconflict { color:green; 
  font-style:italic; margin-top:1.33em; margin-bottom:1.33em; }

  table.markup { border:2px dotted #ccf; width:90%; }
  td.markup1, td.markup2 { padding-left:10px; padding-right:10px; }
  table.vert td.markup1 { border-bottom:1px solid #ccf; }
  table.horiz td.markup1 { width:23em; border-right:1px solid #ccf; }
  table.markup caption { text-align:left; }
  div.faq p, div.faq pre { margin-left:2em; }
  div.faq p.question { margin:1em 0 0.75em 0; font-weight:bold; }
  div.faqtoc div.faq * { display:none; }
  div.faqtoc div.faq p.question 
    { display:block; font-weight:normal; margin:0.5em 0 0.5em 20px; line-height:normal; }
  div.faqtoc div.faq p.question * { display:inline; }
   
    .frame 
      { border:1px solid #cccccc; padding:4px; background-color:#f9f9f9; }
    .lfloat { float:left; margin-right:0.5em; }
    .rfloat { float:right; margin-left:0.5em; }
a.varlink { text-decoration:none; }

--></style>  <meta name='robots' content='index,follow' />
<link rel='stylesheet' type='text/css' href='../../pub/css/local.css' />

</head>

<body>
	<div id="page">
		<div id="header">
			<!--PageHeaderFmt-->
			<div id="headerimg">
				<div class='vspace'></div>

			</div>
			
			
			<div id="nav">
				<ul><li><a class='wikilink' href='Gallery'>Gallery</a>
</li><li><a class='wikilink' href='DownloadBinary'>Download</a>
</li><li><a class='wikilink' href='../ReferenceGuide/Introduction'>User Guide</a>
</li><li><a class='wikilink' href='ContactMe'>Contact</a>
</li><li><a class='wikilink' href='HomePage'>Home</a>
</li></ul>

			</div>
			<!--/PageHeaderFmt-->
		</div>

		<div id="content">
			<div id="pagelead">
				<div class="pageheader">
					<!--PageTitleFmt-->
					<!--<a href='http://molekel.cscs.ch/wiki/pmwiki.php/Main/HomePage' class='pagegroup'>Main</a>-->
					<p> </p>
					<h1><a href='Build'>Build</a></h1>
					<!--/PageTitleFmt-->
				</div>

				
			</div>

			<!--PageText-->
<div id='wikitext'>
<p class='vspace'>In order to build <em>Molekel</em> from source you need the following tools
</p><ul><li><em>Subversion</em> client - to get the code from the repository, optional if you download the source code archive
</li><li><em>CMake</em> ( <a class='urllink' href='http://www.cmake.org' rel='nofollow'>http://www.cmake.org</a> ) - makefile generation tool
</li><li>A C++ compiler such as <em>gcc</em> (MacOS X, Unix), <em>MinGW</em> (Windows) or <em>Visual C++</em> (Windows, recommended,  free version available at <a class='urllink' href='http://www.microsoft.com/express/vc' rel='nofollow'>http://www.microsoft.com/express/vc</a>)
</li><li><code>wget</code> (optional but useful to automate the build process as done in the <em>Molekel</em> build scripts)
</li><li><code>unix2dos</code> and <code>dos2unix</code> (both optional) to convert <code>EOL</code> separators  
</li></ul><p>and libraries:
</p><ul><li><em>Qt</em>: <a class='urllink' href='http://www.trolltech.com/products/qt' rel='nofollow'>http://www.trolltech.com/products/qt</a>
</li><li><em>Qwt</em>: <a class='urllink' href='http://qwt.sourceforge.net' rel='nofollow'>http://qwt.sourceforge.net</a>
</li><li><em>VTK</em> 5.x: <a class='urllink' href='http://www.vtk.org' rel='nofollow'>http://www.vtk.org</a>
</li><li><em>Coin3D</em>: <a class='urllink' href='http://www.coin3d.org' rel='nofollow'>http://www.coin3d.org</a>
</li><li><em>OpenMOIV</em>: <a class='urllink' href='http://www.tecn.upf.es/openMOIV' rel='nofollow'>http://www.tecn.upf.es/openMOIV</a> 
</li><li><em>OpenBabel</em>: <a class='urllink' href='http://openbabel.sourceforge.net' rel='nofollow'>http://openbabel.sourceforge.net</a>  
</li></ul><p class='vspace'>After all the dependencies are installed and you have downloaded the source code you need to generate the makefiles with <em>CMake</em>; three options available:
</p><ul><li>(<em>RECOMMENDED</em>)  get one of the <code>run_&lt;environment&gt;_cmake.sh/bat</code> files from the <code>build</code> directory of the source distribution and change the paths to suit your environment then execute the script OR
</li><li>run <code>ccmake</code> (Unix/Mac OS X) or <code>CMakeSetup.exe</code> (Windows) and specify the include and library path through an interactive interface then execute <code>make</code>/<code>nmake</code> OR
</li><li>run <code>cmake</code> on the command line specifying the path to the <code>CMakeLists.txt</code> configuration file and the include/library paths on the command line then execute <code>make</code>/<code>nmake</code>
</li></ul><div class='vspace'></div><h2>Detailed instructions</h2>
<h3>I Dependencies</h3>
<ol><li>Install <em>Qt</em> (<a class='urllink' href='http://www.trolltech.com/products/qt' rel='nofollow'>http://www.trolltech.com/products/qt</a>); <em>Qt</em> has to be installed before VTK because VTK needs some <em>Qt</em> libraries.
</li><li>Install <em>VTK</em> 5.x (<a class='urllink' href='http://www.vtk.org' rel='nofollow'>http://www.vtk.org</a>)
<ul><li>build <em>VTK</em> from source and make sure the following parameters are set to <code>ON</code>
<ul><li><code>VTK_USE_GUISUPPORT</code>
</li><li><code>VTK_USE_QVTK</code>
</li><li><code>VTK_USE_GL2PS</code>
</li></ul></li><li>Check out OS specific information below.
</li></ul></li><li>Install <em>OpenBabel</em> 2.x libraries (<a class='urllink' href='http://openbabel.sourceforge.net' rel='nofollow'>http://openbabel.sourceforge.net</a>)
<ul><li>If you are building on Windows with <em>MinGW</em> check out the <em>OpenBabel</em> OS specific issues below.
</li></ul></li><li>Install <em>OpenInventor</em> and <em>Molecular Inventor</em>
</li></ol><ul><li>Any implementation of <em>OpenInventor</em> 2.x will work; you can get an open source version here (<em>Coin3D</em>): <a class='urllink' href='http://www.coin3d.org' rel='nofollow'>http://www.coin3d.org</a>
<ul><li>Note that in case you want to build <em>OpenMOIV</em> (or any program requiring <em>Coin3D</em>) you also have to have in the <code>PATH</code> the directory where the <code>coin-config</code> file resides. In case <em>Coin3D</em> is installed as a framework on Mac OS this is not required.
</li></ul></li><li>An open source implementation of <em>Molecular Inventor</em> (<em>OpenMOIV</em>) can be downloaded here: <a class='urllink' href='http://www.tecn.upf.es/openMOIV' rel='nofollow'>http://www.tecn.upf.es/openMOIV</a>
</li><li>When building <em>OpenMOIV</em> on Linux/MinGW/VC++ make sure you set the <code>OIV_DIR</code> environment variable to the installation directory of <em>Coin3D</em>  (where the include and lib dirs are) e.g. <code>export OIV_DIR=/usr/local</code> You do not need to do this on Mac OS X if you installed <em>Coin3D</em> as a framework (which is the default).
</li><li>Make sure you read the build information for <em>OpenMOIV</em> to undestand how to deal with fonts on different platforms.
</li></ul><p class='vspace'>When building with <em>MinGW</em> you need to make sure that the <code>gettimeofday</code> function is available (check in <code>include/sys/time.h</code>); in case it is not then download the latest <code>mingw-runtime</code> environment or have a look at the <a class='wikilink' href='OpenBabel'><em>OpenBabel</em> build page</a>.
</p>
<div class='vspace'></div><h3>II Build</h3>
<p>These build instruction are useful only if you want to run <em>CMake</em> yourself instead of using one of the scripts available in the <code>build</code> directory.
</p>
<div class='vspace'></div><ol><li>Uncompress the <em>Molekel</em> source archive, <code>cd</code> to the top level distribution dir and create a <code>cmakebuild</code> folder:
<ul><li><code>mkdir cmakebuild</code>
</li><li>cd to the <em>cmakebuild</em> folder
</li></ul></li><li>Modify the <code>PATH</code> variable so that the correct binary <em>Qt</em> dir is found: <em>CMake</em> finds Qt looking for the <code>qmake</code> executable so you need to have the right <code>qmake</code> executable as the first one in the path.
</li><li>Create a text file <code>version_info.cmake</code> in the build directory; this file is included by the main <code>CMakeLists.txt</code> file to set version information. Open <code>version_info.cmake</code> and add something like (use whatever version numbers you want).
</li></ol><div class='indent'><pre class='escaped'>
SET( MOLEKEL_VERSION_MAJOR 5 )
SET( MOLEKEL_VERSION_MINOR 0 )
SET( MOLEKEL_VERSION_PATCH 0 )
SET( MOLEKEL_VERSION_BUILD 0 )
SET( MOLEKEL_VERSION_TYPE "development" )
</pre>
</div><ol><li>Run <code>ccmake</code> (Linux, Mac OS) or <code>CMakeSetup.exe</code> (Windows) and make sure that all the parameters are correct.
<ul><li><code>ccmake ../src</code>
</li><li><code>IV_DYNAMIC</code> and <code>MOIV_DYNAMIC</code> should be set to <code>ON</code> in case dynamic libraries are used; to <code>OFF</code> otherwise. Note that this only seems to be required on <code>MinGW</code>.
</li><li>The following parameters need to be set (make sure you also read the OS specific section) from within <code>ccmake</code> (Linux, Mac) or <code>CMakeSetup.exe</code> (Windows):
<ul><li><code>OPENBABEL_INCLUDE_DIR</code>: <em>OpenBabel</em> include dir; where the <code>openbabel</code> include dir is e.g. <code>/usr/local/include/openbabel-2.0</code>
</li><li><code>OPENBABEL_LINK_DIR</code>: <em>OpenBabel</em> library dir; where the <code>libopenbabel.&lt;dll|so&gt;</code> file is.
</li><li><code>IV_INCLUDE_DIR</code>: <em>OpenInventor</em> (<em>Coin3D</em>) include dir; where the <code>Inventor</code> include dir resides. Not required on Mac if <em>Coin</em> is installed as a framework.
</li><li><code>IV_LINK_DIR</code>: <em>OpenInventor</em> (<em>Coin3D</em>) lib dir. Not required on Mac if Coin is installed as a framework.
</li><li><code>MOIV_INCLUDE_DIR</code>: <em>Molecular Inventor</em> include dir; where the <code>ChemKit2</code> include directory is.
</li><li><code>MOIV_LINK_DIR</code>: <em>Molecular Inventor</em> lib dir;
</li><li><code>VTK_DIR</code>: <em>VTK</em> dir e.g. <code>/usr/local/lib/vtk-5.0</code>
</li></ul></li></ul></li><li>Generate the makefiles with <code>ccmake</code> or <code>CMakeSetup.exe</code> (configure then generate):
<ol><li>Check that all the parameters are set to the proper values.
</li><li>Press <code>[c]</code>(Mac, Linux) or <em>Configure</em>(Windows) to configure then <code>[g]</code>(Mac, Linux) or <em>Ok</em>(Windows) to generate the makefiles.
</li></ol><ul><li>Whenever you change one or more parameter values in <code>ccmake</code> or <code>CMakeSetup</code> you'll have to configure before you can generate.
</li></ul></li><li>Run <code>make</code> or <code>nmake</code>.
</li></ol><p class='vspace'>The build process will generate the following tree in the build directory:
</p><ul><li><code>dist</code> - release notes, license, readme
<ul><li><code>bin</code> OR <code>bundle</code> - binary or Mac bundle
</li><li><code>resources</code>  - images, configuration files...
<ul><li><code>toolbar</code> - toolbar icons
</li></ul></li><li><code>doc</code> - user documentation
</li></ul></li></ul><p class='vspace'><strong><em>Note</em></strong>: with <em>MinGW 3.4.5</em> compilation of <em><code>MolekelData.cpp</code></em> can be very slow; to speed up build time during development <code>#define MOLEKEL_USE_COMMON_FILE_FORMATS</code>
</p>
<div class='vspace'></div><h3>III Run</h3>
<p>In order to launch <em>Molekel</em> you need to make sure that all the required dynamic libraries are accessible from the executable.
</p>
<p class='vspace'><strong>Windows</strong>
</p><div class='indent'>All the required <em>dll</em>s must be in directories listed in the <code>PATH</code> environment variable or in the same directory as the executable.
</div><p class='vspace'><strong>Linux</strong>
</p><div class='indent'>You can make all the required shared objects accessible by adding the directories where the libraries reside to the <code>LD_LIBRARY_PATH</code> environment variable. To find the list of used <em>dll</em>s run: <code>ldd dist/bin/Molekel</code> from within the build directory.
</div><p class='vspace'><strong>MacOS</strong>
</p><div class='indent'>You should not have to do anything to run the program; if for whatever reason the program cannot find some dynamic libraries you can add the directories where the dynamic libraries reside to the <code>DYLD_LIBRARY_PATH</code> environment variable. To find the list of dynamic libraries  and frameworks used run <code>otool -L dist/bundle/Molekel.app/Contents/MacOS/Molekel</code> from the build directory.
</div><div class='indent'>All the resources in the <em><code>resource</code></em> directory (including the <em><code>toolbar</code></em> dir) must be copied into <em><code>Molekel.app/Contents/Resources</code></em>.  
</div><div class='vspace'></div><h2>Rendering issues</h2>
<p>Molekel versions 5.3 or above use some advanced multi-pass rendering techniques to enhance visual quality; these techniques may generate visual artifacts on transparent surfaces on some specific graphic cards. We have experienced problems on SuSE 10.3 x86-32/NVIDIA 8800 Ultra and Windows XP 32bit/NVIDIA 8800 Ultra system; on Windows problems can be  fixed by selecting <em>Let the 3D application decide</em> (which should be the default) in the <em>Image Settings</em> page of the NVIDIA Control Panel.       
</p>
<p class='vspace'>In general, in case you have rendering problems, get messages about errors in Coin or the program crashes when loading files without reporting any error, you can set the value of two environment variables as follows:
</p><ul><li><code>COIN_FULL_INDIRECT_RENDERING=0</code>
</li><li><code>COIN_FORCE_GL1_0_ONLY=1</code>
</li></ul><p>before launching Molekel to disable the use of advanced OpenGL features.
</p>
<p class='vspace'>To set the environment variables permanently on Windows XP right-click on <em>My Computer</em> then select the <em>Advanced</em> tab and click on the <em>Environment Variables</em> button.
</p>
<p class='vspace'>You can also set the <code>COIN_DEBUG_GLGLUE</code> environment variable to <code>1</code> before starting Molekel in a console window to print OpenGL debug information.
To enable printing on standard output on Mac you'll have to invoke the actual executable in the <em>Molekel.app</em> folder i.e. <code>Molekel.app/Contents/MacOS/Molekel</code>.
</p>
</div>

		</div>

		<div id="sidebar">
			

			<!--PageLeftFmt--> <!-- /*** UV ***/ -->
			<p><span class='top'>Main</span>
</p>
<p class='vspace sidehead'> <strong><a class='wikilink' href='Gallery'>Gallery</a></strong>
</p>
<p class='vspace sidehead'> <strong><a class='wikilink' href='DownloadBinary'>Download</a></strong>
</p>
<p class='vspace sidehead'> <strong>Documentation</strong>
</p><ul><li><a class='wikilink' href='../ReferenceGuide/Introduction'>Manual</a> 
</li><li><a class='wikilink' href='Presentations'>Presentations</a>
</li><li><a class='wikilink' href='VideosBlipTV'>Videos</a>
</li><li><a class='wikilink' href='VideoTutorials'>Video tutorials</a>
</li><li><a class='wikilink' href='Install'>Install</a>
</li><li><a class='selflink' href='Build'>Build</a>
<ul><li><a class='wikilink' href='BuildPlatformSpecific'>Platforms</a>
</li><li><a class='wikilink' href='OpenBabel'>OpenBabel</a>
</li></ul></li></ul><p class='vspace sidehead'> <strong><a class='wikilink' href='Citing'>Citing</a></strong>
</p>
<div class='vspace'></div>

			<!--/PageLeftFmt-->
		</div>

		<div id="footer">
			<!--PageFooterFmt-->
			<div class="pageactions">
					<!--PageActionFmt-->
					<ul><li class='browse'><a accesskey=''  class='selflink' href='Build'>View</a>
</li><li class='edit'><a accesskey='e'  rel='nofollow'  class='wikilink' href='Build?action=edit'>Edit</a>
</li><li class='diff'><a accesskey='h'  rel='nofollow'  class='wikilink' href='Build?action=diff'>History</a>
</li><li class='print'><a accesskey=''  rel='nofollow'  class='wikilink' href='Build?action=print'>Print</a>
</li></ul>

					<!--/PageActionFmt-->
			</div>
			<p  style='text-align: right;'> <span class='lastmodified'> <span style='font-size:83%'>Page last modified March 16, 2009, at 06:13 PM</span>   </span>
</p>
<div class='vspace'></div>

			<!--/PageFooterFmt-->
			<hr class="clear" />
		</div>

	</div>

	<!--<div id="credits">
		<div class="alignleft">
			<a style="color:#7A9299;" href="http://www.ndesign-studio.com/resources/wp-themes/glossyblue/" rel="nofollow">GlossyBlue</a> theme adapted by <a href="http://solidgone.org/Skins/">David Gilbert</a>
		</div>
		<div class="alignright">
			Powered by <a href="http://pmwiki.com/">PmWiki</a>
		</div>
	</div>-->

<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
try {
var pageTracker = _gat._getTracker("UA-7968858-1");
pageTracker._trackPageview();
} catch(err) {}
</script>


</body>
</html>
